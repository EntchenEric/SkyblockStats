import { minecraftColoredStringToText } from './minecraftColoredStringToText';


const Icons: { [key: string]: string } = {
  "Strength": '‚ùÅ',
};

export function getPetLore(
  id: string,
  rarity: 'COMMON' | 'UNCOMMON' | 'RARE' | 'EPIC' | 'LEGENDARY' | 'MYTHIC',
  relic: boolean,
  level: number,
  skin: string,
  profileData: any,
  uuid: string
) {

  let blazekills = undefined;
  if (id.includes('WISP')) {
    for (let i = 0; i < profileData.length; i++) {
      if (profileData[i].type.includes('WISP') && profileData[i].uuid === uuid) {
        blazekills = profileData[i]['extra']['blaze_kills'];
      }
    };
    if (blazekills != undefined) console.log(blazekills);

    const extraPetStatsMinMax: any = {
      'GOLDEN_DRAGON': {
        'BaseStats': { 'Strength': [95, 120], 'BonusAttackSpeed': [0, 30], 'MagicFind': [0, 15] },
        'GoldsPower': {
          'LEGENDARY': [50, 100],
        },
        'DragonsGreed': {
          'LEGENDARY': [0, 0.5],
        },
        'LegendaryTreasure': {
          'LEGENDARY': [0.125, 0.25],
        }
      },
      'BLACK_CAT': {
        'BaseStats': { 'Speed': [0, 125], 'Intelligence': [0, 100], 'MagicFind': [0, 15], 'PetLuck': [0, 15] },
        'Hunter': {
          'LEGENDARY': [1, 100],
          'MYTHIC': [1, 100],
        },
        'Omen': {
          'LEGENDARY': [0, 15],
          'MYTHIC': [0, 15],
        },
        'Supernatural': {
          'LEGENDARY': [0.15, 15],
          'MYTHIC': [0.15, 15],
        },
        'Looting': {
          'MYTHIC': [0.1, 15],
        }
      },
      'BAT': {
        'BaseStats': { 'Speed': [0, 5], 'Intelligence': [0, 100], 'SeaCreatureChance': [0, 5] },
        'CandyLover': {
          'COMMON': [0, 10],
          'UNCOMMON': [0, 15],
          'RARE': [0, 15],
          'EPIC': [0, 20],
          'LEGENDARY': [0, 20],
          'MYTHIC': [0, 20],
        },
        'Nightmare': {
          'RARE': { 'Intelligence': [0, 20], 'Speed': [0, 40] },
          'EPIC': { 'Intelligence': [0, 30], 'Speed': [0, 50] },
          'LEGENDARY': { 'Intelligence': [0, 30], 'Speed': [0, 50] },
          'MYTHIC': { 'Intelligence': [0, 30], 'Speed': [0, 50] },
        },
        'WingsOfSteel': {
          'LEGENDARY': [0, 50],
          'MYTHIC': [0, 50],
        },
        'Sonar': {
          'MYTHIC': [0, 25],
        }
      },
      'ENDERMITE': {
        'BaseStats': { 'Intelligence': [0, 150], 'PetLuck': [0, 15] },
        'MoreStonks': {
          'COMMON': [0, 50],
          'UNCOMMON': [0, 75],
          'RARE': [0, 75],
          'EPIC': [0, 100],
          'LEGENDARY': [0, 100],
          'MYTHIC': [0, 100],
        },
        'DailyCommuter': {
          'RARE': [0, 30],
          'EPIC': [0, 40],
          'LEGENDARY': [0, 40],
          'MYTHIC': [0, 40],
        },
        'MiteBait': {
          'LEGENDARY': [0, 3],
          'MYTHIC': [0, 3],
        },
        'Sacrificer': {
          'MYTHIC': [0, 10],
        }
      },
      'FLYING_FISH': {
        'BaseStats': { 'Strength': [0, 50], 'Defense': [0, 50] },
        'QuickReel': {
          'RARE': [0, 60],
          'EPIC': [0, 75],
          'LEGENDARY': [0, 80],
          'MYTHIC': [0, 80],
        },
        'WaterBender': {
          'RARE': { 'Strength': [0, 80], 'Defense': [0, 80] },
          'EPIC': { 'Strength': [0, 100], 'Defense': [0, 100] },
          'LEGENDARY': { 'Strength': [0, 100], 'Defense': [0, 100] },
        },
        'LavaBender': {
          'MYTHIC': { 'Strength': [0, 100], 'Defense': [0, 100] },
        },
        'DeepSeaDiver': {
          'LEGENDARY': [0, 20],
        },
        'MagmaticDiver': {
          'MYTHIC': [0, 20],
        },
        'RapidDecay': {
          'MYTHIC': [0, 50]
        },
      },
      'GUARDIAN': {
        'BaseStats': { 'Intelligence': [0, 100], 'Defense': [0, 50] },
        'Lazerbeam': {
          'COMMON': [0, 2],
          'UNCOMMON': [0, 5],
          'RARE': [0, 10],
          'EPIC': [0, 15],
          'LEGENDARY': [0, 20],
          'MYTHIC': [1, 120],
        },
        'EnchantingWisdomBoost': {
          'RARE': [0, 25],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
          'MYTHIC': [0, 30],
        },
        'ManaPool': {
          'LEGENDARY': [0, 30],
          'MYTHIC': [0, 30],
        },
        'LuckySeven': {
          'MYTHIC': [0, 7],
        },
      },
      'JERRY': {
        'BaseStats': { 'Intelligence': [0, -100] },
        'Jerry': {
          'LEGENDARY': [0, 10],
          'MYTHIC': [0, 50],
        },
      },
      'MITHRIL_GOLEM': {
        'BaseStats': { 'TrueDefense': [0, 50] },
        'MithrilAffinity': {
          'COMMON': [0, 50],
          'UNCOMMON': [0, 75],
          'RARE': [0, 75],
          'EPIC': [0, 100],
          'LEGENDARY': [0, 100],
          'MYTHIC': [0, 100],
        },
        'TheSmellOfPowder': {
          'RARE': [0, 10],
          'EPIC': [0, 20],
          'LEGENDARY': [0, 20],
          'MYTHIC': [0, 20],
        },
        'DangerAverse': {
          'LEGENDARY': [0, 20],
          'MYTHIC': [0, 20],
        },
        'RefinedSenses': {
          'MYTHIC': [0, 10],
        },
      },
      'RAT': {
        'BaseStats': { 'Strength': [0, 60], 'Health': [0, 125], 'CritDamage': [0, 25] },
        'RatsBlessing': {
          'LEGENDARY': { 'MagicFind': [2, 7], 'Seconds': [20, 60] },
          'MYTHIC': { 'MagicFind': [2, 7], 'Seconds': [20, 60] },
        },
      },
      'SNOWMAN': {
        'BaseStats': { 'Strength': [0, 25], 'Damage': [0, 25], 'CritDamage': [0, 25] },
        'Blizzard': {
          'LEGENDARY': [4, 8],
          'MYTHIC': [4, 8],
        },
        'Frostbite': {
          'LEGENDARY': [0, 15],
          'MYTHIC': [0, 15],
        },
      },
      'GHOUL': {
        'BaseStats': { 'Intelligence': [0, 75], 'Health': [1, 100], 'Ferocity': [0, 5] },
        'AmplifiedHealing': {
          'EPIC': [0, 20],
          'LEGENDARY': [0, 25],
        },
        'ZombieArm': {
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'ReaperSoul': {
          'LEGENDARY': [0, 100],
        },
      },
      'WITHER_SKELETON': {
        'BaseStats': { 'Strength': [0, 25], 'Intelligence': [0, 25], 'CritChance': [0, 25], 'CritDamage': [0, 25], 'Defense': [0, 25] },
        'StrongerBones': {
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'WitherBlood': {
          'EPIC': [0, 25],
          'LEGENDARY': [0, 25],
        },
        'DeathsTouch': {
          'LEGENDARY': [0, 200],
        }
      },
      'TIGER': {
        'BaseStats': { 'Strength': [5, 15], 'CritChance': [0, 5], 'CritDamage': [0, 50], 'Ferocity': [0, 25] },
        'MercilessSwipe': {
          'COMMON': [0, 10],
          'UNCOMMON': [0, 20],
          'RARE': [0, 20],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'Hemorrhage': {
          'RARE': [0, 30],
          'EPIC': [0, 55],
          'LEGENDARY': [0, 15],
        },
        'ApexPredator': {
          'LEGENDARY': [0, 100],
        },
      },
      'WOLF': {
        'BaseStats': { 'Speed': [0, 20], 'CritDamage': [0, 10], 'Health': [0, 50], 'TrueDefense': [0, 10] },
        'AlphaDog': {
          'COMMON': [0, 10],
          'UNCOMMON': [0, 20],
          'RARE': [0, 20],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'PackLeader': {
          'RARE': [0, 10],
          'EPIC': [0, 15],
          'LEGENDARY': [0, 15],
        },
        'CombatWisdomBoost': {
          'LEGENDARY': [0, 20],
        },
      },
      'MEGALODON': {
        'BaseStats': { 'Strength': [0, 50], 'Ferocity': [0, 5], 'MagicFind': [0, 10] },
        'BloodScent': {
          'EPIC': [0, 25],
          'LEGENDARY': [0, 25],
        },
        'EnhancedScales': {
          'EPIC': [0, 20],
          'LEGENDARY': [0, 20],
        },
        'FeedingFrenzy': {
          'LEGENDARY': [0, 50],
        },
      },
      'MONKEY': {
        'BaseStats': { 'Speed': [0, 20], 'Intelligence': [0, 50] },
        'Treeborn': {
          'COMMON': [0, 40],
          'UNCOMMON': [0, 50],
          'RARE': [0, 50],
          'EPIC': [0, 60],
          'LEGENDARY': [0, 60],
        },
        'VineSwing': {
          'RARE': [0, 75],
          'EPIC': [0, 100],
          'LEGENDARY': [0, 100],
        },
        'EvolvedAxes': {
          'LEGENDARY': [0, 50],
        },
      },
      'MOOSHROOM_COW': {
        'BaseStats': { 'Health': [1, 100], 'FarmingFortune': [11, 110] },
        'EfficientMushrooms': {
          'COMMON': [0, 20],
          'UNCOMMON': [0, 20],
          'RARE': [0, 30],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'MushroomEater': {
          'RARE': [0, 100],
          'EPIC': [0, 100],
          'LEGENDARY': [0, 100],
        },
        'FarmingStrength': {
          'LEGENDARY': [40, 20],
        },
      },
      'OCELOT': {
        'BaseStats': { 'Speed': [0, 50], 'Ferocity': [0, 10] },
        'ForagingWisdomBoost': {
          'COMMON': [0, 20],
          'UNCOMMON': [0, 25],
          'RARE': [0, 25],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'TreeHugger': {
          'RARE': [0, 30],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'TreeEssence': {
          'LEGENDARY': [0, 30]
        },
      },
      'PARROT': {
        'BaseStats': { 'Intelligence': [0, 100], 'CritDamage': [0, 10] },
        'Flamboyant': {
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'Repeat': {
          'EPIC': [5, 40],
          'LEGENDARY': [5, 40],
        },
        'BirdDiscourse': {
          'LEGENDARY': [5, 30],
        },
        'ParrotFeatherInfusion': {
          'LEGENDARY': [0, 20],
        },
      },
      'PHOENIX': {
        'BaseStats': { 'Strength': [50, 150], 'Intelligence': [10, 60] },
        'Rekindle': {
          'EPIC': { 'Strength': [10, 20], 'Seconds': [2, 4] },
          'LEGENDARY': { 'Strength': [15, 30], 'Seconds': [2, 4] },
        },
        'FourthFlare': {
          'EPIC': { 'Value': [1, 13], 'Seconds': [2, 4] },
          'LEGENDARY': { 'Value': [1, 15], 'Seconds': [2, 5] },
        },
      },
      'PIG': {
        'BaseStats': { 'Speed': [0, 25] },
        'Run': {
          'COMMON': [0, 30],
          'UNCOMMON': [0, 40],
          'RARE': [0, 40],
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'Sprint': {
          'RARE': [0, 40],
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
      },
      'RABBIT': {
        'BaseStats': { 'Speed': [0, 20], 'Health': [0, 100] },
        'HappyFeet': {
          'COMMON': [0, 30],
          'UNCOMMON': [0, 40],
          'RARE': [0, 40],
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'FarmingWisdomBoost': {
          'RARE': [0, 25],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'EfficientFarming': {
          'LEGENDARY': [0, 30],
        },
      },
      'ROCK': {
        'BaseStats': { 'Defense': [0, 200], 'TrueDefense': [0, 10] },
        'Fortify': {
          'RARE': [0, 20],
          'EPIC': [0, 25],
          'LEGENDARY': [0, 25],
        },
        'SteadyGround': {
          'LEGENDARY': [0, 30],
        },
      },
      'KUUDRA': {
        'BaseStats': { 'Strength': [0, 40], 'Health': [0, 400] },
      },
      'REINDEER': {
        'BaseStats': { 'Health': [0, 100], 'SeaCreatureChance': [0, 5], 'FishingSpeed': [0, 25] },
        'Infused': { 'LEGENDARY': [0, 75] },
        'SnowPower': { 'LEGENDARY': [0, 10] },
        'IcyWind': { 'LEGENDARY': [0, 20] },
      },
      'SKELETON': {
        'BaseStats': { 'CritChance': [0, 15], 'CritDamage': [0, 30] },
        'BoneArrows': {
          'COMMON': [0, 10],
          'UNCOMMON': [0, 15],
          'RARE': [0, 15],
          'EPIC': [0, 20],
          'LEGENDARY': [0, 20],
        },
        'Combo': {
          'RARE': [0, 15],
          'EPIC': [0, 17],
          'LEGENDARY': [0, 20],
        },
      },
      'SILVERFISH': {
        'BaseStats': { 'Health': [0, 20], 'Defense': [0, 100] },
        'TrueDefenseBoost': {
          'COMMON': [0, 5],
          'UNCOMMON': [0, 10],
          'RARE': [0, 10],
          'EPIC': [0, 15],
          'LEGENDARY': [0, 15],
        },
        'MiningWisdomBoost': {
          'RARE': [0, 25],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
      },
      'SCATHA': {
        'BaseStats': { 'Defense': [0, 100], 'MiningSpeed': [0, 100] },
        'Grounded': {
          'RARE': [0, 100],
          'EPIC': [0, 125],
          'LEGENDARY': [0, 125],
        },
        'Burrowing': {
          'RARE': [0, 2.5],
          'EPIC': [0, 3],
          'LEGENDARY': [0, 3],
        },
        'Wormhole': {
          'EPIC': [0, 100],
          'LEGENDARY': [0, 100],
        },
        'GemstonePower': {
          'LEGENDARY': [0, 20],
        },
      },
      'SQUID': {
        'BaseStats': { 'Intelligence': [0, 50], 'Health': [0, 50] },
        'MoreInk': {
          'COMMON': [0, 50],
          'UNCOMMON': [0, 75],
          'RARE': [0, 75],
          'EPIC': [0, 100],
          'LEGENDARY': [0, 100],
        },
        'InkSpecialty': {
          'RARE': { 'Damage': [0, 30], 'Strength': [0, 10] },
          'EPIC': { 'Damage': [0, 40], 'Strength': [0, 20] },
          'LEGENDARY': { 'Damage': [0, 40], 'Strength': [0, 20] },
        },
        'FishingWisdomBoost': {
          'LEGENDARY': [0, 30],
        },
      },
      'SNAIL': {
        'BaseStats': { 'Intelligence': [0, 100] },
        'RedSandEnjoyer': {
          'COMMON': [0, 10],
          'UNCOMMON': [0, 20],
          'RARE': [0, 20],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'SlowMoving': {
          'RARE': [0, 40],
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'SlowButEfficient': {
          'LEGENDARY': [0, 1],
        },
      },
      'GRANDMA_WOLF': {
        'BaseStats': { 'Strength': [0, 25], 'Health': [0, 100] },
        'KillCombo': {
          'COMMON': { '5': [8, 10], '10': [6, 8], '15': [4, 6], '20': [3, 5], '25': [3, 4], '30': [2, 3], 'MagicFind5': 1, 'MagicFind15': 1, 'MagicFind25': 1, 'Coins10': 2, 'CombatWisdom20': 5, 'Coins30': 2 },
          'UNCOMMON': { '5': [8, 10], '10': [6, 8], '15': [4, 6], '20': [3, 5], '25': [3, 4,], '30': [2, 3], 'MagicFind5': 1, 'MagicFind15': 2, 'MagicFind25': 1, 'Coins10': 4, 'CombatWisdom20': 7, 'Coins30': 4 },
          'RARE': { '5': [8, 10], '10': [6, 8], '15': [4, 6], '20': [3, 5], '25': [3, 4], '30': [2, 3], 'MagicFind5': 2, 'MagicFind15': 2, 'MagicFind25': 2, 'Coins10': 6, 'CombatWisdom20': 9, 'Coins30': 6 },
          'EPIC': { '5': [8, 10], '10': [6, 8], '15': [4, 6], '20': [3, 5], '25': [3, 4], '30': [2, 3], 'MagicFind5': 2, 'MagicFind15': 3, 'MagicFind25': 2, 'Coins10': 8, 'CombatWisdom20': 12, 'Coins30': 8 },
          'LEGENDARY': { '5': [8, 10], '10': [6, 8], '15': [4, 6], '20': [3, 5], '25': [3, 4], '30': [2, 3], 'MagicFind5': 3, 'MagicFind15': 3, 'MagicFind25': 3, 'Coins10': 10, 'CombatWisdom20': 15, 'Coins30': 10 },
        },
      },
      'DOLPHIN': {
        'BaseStats': { 'Intelligence': [0, 100], 'SeaCreatureChance': [0, 5] },
        'PodTactics': {
          'COMMON': [0, 7],
          'UNCOMMON': [0, 8],
          'RARE': [0, 8],
          'EPIC': [0, 10],
          'LEGENDARY': [0, 10],
        },
        'Echolocation': {
          'RARE': [0, 7],
          'EPIC': [0, 10],
          'LEGENDARY': [0, 10],
        },
      },
      'ELEPHANT': {
        'BaseStats': { 'Intelligence': [0, 75], 'Health': [0, 100] },
        'Stomp': {
          'COMMON': [0, 15],
          'UNCOMMON': [0, 15],
          'RARE': [0, 15],
          'EPIC': [0, 20],
          'LEGENDARY': [0, 20],
        },
        'WalkingFortress': {
          'RARE': [0, 1],
          'EPIC': [0, 1],
          'LEGENDARY': [0, 1],
        },
        'TrunkEfficiency': {
          'LEGENDARY': [0, 150],
        },
      },
      'BAL': {
        'BaseStats': { 'Strength': [0, 25], 'Ferocity': [0, 10] },
        'FireWhip': {
          'EPIC': [0, 10],
          'LEGENDARY': [0, 10],
        },
        'MadeofLava': {
          'LEGENDARY': [0, 15],
        },
      },
      'GRIFFIN': {
        'BaseStats': { 'Strength': [0, 25], 'Intelligence': [0, 10], 'CritChance': [0, 10], 'CritDamage': [0, 50], 'MagicFind': [0, 10] },
        'LegendaryConstitution': {
          'UNCOMMON': { 'Regeneration': 'V', 'Strength': 'VII' },
          'RARE': { 'Regeneration': 'VI', 'Strength': 'VII' },
          'EPIC': { 'Regeneration': 'VI', 'Strength': 'VIII' },
          'LEGENDARY': { 'Regeneration': 'VII', 'Strength': 'VIII' },
        },
        'PerpetualEmpathy': {
          'EPIC': [0, 16],
          'LEGENDARY': [0, 20],
        },
        'KingofKings': {
          'LEGENDARY': [1, 15],
        },
      },
      'CHICKEN': {
        'BaseStats': { 'Health': [0, 200] },
        'LightFeet': {
          'COMMON': [0, 30],
          'UNCOMMON': [0, 40],
          'RARE': [0, 40],
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'Eggstra': {
          'RARE': [0, 80],
          'EPIC': [0, 100],
          'LEGENDARY': [0, 100],
        },
        'MightyChickens': {
          'LEGENDARY': [0, 30],
        },
      },
      'BLAZE': {
        'BaseStats': { 'Intelligence': [0, 100], 'Defense': [10, 30] },
      },
      'BABY_YETI': {
        'BaseStats': { 'Strength': [0, 40], 'Intelligence': [0, 75] },
        'ColdBreeze': {
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'IceShields': {
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'YetiFury': {
          'LEGENDARY': [0, 100],
        },
      },
      'SKELETON_HORSE': {
        'BaseStats': { 'Speed': [0, 50], 'Intelligence': [0, 100] },
        'Run': { 'LEGENDARY': [0, 150] },
        'RideIntoBattle': { 'LEGENDARY': [0, 40] },
      },
      'BLUE_WHALE': {
        'BaseStats': { 'Health': [0, 200] },
        'Ingest': {
          'COMMON': [0, 50],
          'UNCOMMON': [0, 100],
          'RARE': [0, 150],
          'EPIC': [0, 200],
          'LEGENDARY': [0, 250],
        },
        'Bulk': {
          'RARE': { 'Health': [0, 1], 'Defense': [30] },
          'EPIC': { 'Health': [0, 1], 'Defense': [25] },
          'LEGENDARY': { 'Health': [0, 1], 'Defense': [20] },
        },
        'Archimedes': {
          'LEGENDARY': [0, 20],
        },
      },
      'GIRAFFE': {
        'BaseStats': { 'CritChance': [0, 5], 'Health': [0, 100] },
        'GoodHeart': {
          'COMMON': [0, 5],
          'UNCOMMON': [0, 10],
          'RARE': [0, 15],
          'EPIC': [0, 20],
          'LEGENDARY': [0, 25],
        },
        'HigherGround': {
          'RARE': { 'Strength': [0, 40], 'CritDamage': [20, 30] },
          'EPIC': { 'Strength': [0, 50], 'CritDamage': [20, 45] },
          'LEGENDARY': { 'Strength': [0, 50], 'CritDamage': [20, 60] },
        },
        'LongNeck': {
          'LEGENDARY': [0, 25],
        },
      },
      'AMMONITE': {
        'BaseStats': { 'SeaCreatureChance': [0, 5] }, // maxed is 12 but only with the Heart of the Sea perk
        'HeartoftheSea': {
          'LEGENDARY': [0, 1],
        },
        'ExpertCaveFisher': {
          'LEGENDARY': [1, 100],
        },
        'GiftoftheAmmonite': {
          'LEGENDARY': { 'FishingSpeed': [0.01, 0.5], 'Speed': [0.02, 2], 'Defense': [0.02, 2] },
        },
      },
      'LION': {
        'BaseStats': { 'Strength': [0, 50], 'Speed': [0, 25], 'Ferocity': [0, 5] },
        'PrimalForce': {
          'COMMON': { 'Damage': [0, 3], 'Strength': [0, 3] },
          'UNCOMMON': { 'Damage': [0, 5], 'Strength': [0, 5] },
          'RARE': { 'Damage': [0, 10], 'Strength': [0, 10] },
          'EPIC': { 'Damage': [0, 15], 'Strength': [0, 15] },
          'LEGENDARY': { 'Damage': [0, 20], 'Strength': [0, 20] },
        },
        'FirstPounce': {
          'RARE': [0, 75],
          'EPIC': [0, 100],
          'LEGENDARY': [0, 100],
        },
        'KingoftheJungle': {
          'LEGENDARY': [0, 150],
        },
      },
      'JELLYFISH': {
        'BaseStats': { 'Health': [0, 200], 'HealthRegeneration': [0, 100] },
        'RadiantScyphozoa': {
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'StoredEnergy': {
          'EPIC': [0, 1],
          'LEGENDARY': [0, 1],
        },
        'PowerfulPotions': {
          'LEGENDARY': [0, 50],
        },
      },
      'ARMADILLO': {
        'BaseStats': { 'Defense': [0, 200] },
        'RollingMiner': {
          'RARE': [60, 40],
          'EPIC': [60, 30],
          'LEGENDARY': [60, 30],
        },
        'MobileTank': {
          'LEGENDARY': [100, 50],
        },
      },
      'ENDERMAN': {
        'BaseStats': { 'CritDamage': [0, 75] },
        'Enderian': {
          'COMMON': [0, 10],
          'UNCOMMON': [0, 20],
          'RARE': [0, 20],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
          'MYTHIC': [0, 30],
        },
        'TeleportSavyy': {
          'RARE': [0, 40],
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
          'MYTHIC': [0, 50],
        },
        'ZealotMadness': {
          'LEGENDARY': [0, 25],
          'MYTHIC': [0, 25],
        },
        'EndermanSlayer': {
          'MYTHIC': [1, 1.4],
        },
      },
      'EERIE': {
        'BaseStats': { 'Speed': [0, 10], 'Intelligence': [0, 50] }
      },
      'TARANTULA': {
        'BaseStats': { 'Strength': [0, 10], 'CritChance': [0, 10], 'CritDamage': [0, 30] },
        'WebbedCells': {
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
          'MYTHIC': [0, 30],
        },
        'EightLegs': {
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
          'MYTHIC': [0, 50],
        },
        'ArachnidSlayer': {
          'LEGENDARY': [1, 1.5],
          'MYTHIC': [1, 1.5],
        },
      },
      'PIGMAN': {
        'BaseStats': { 'Strength': [0, 50], 'Ferocity': [0, 5], 'Defense': [0, 50] },
        'BaconFarmer': {
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'PorkMaster': {
          'EPIC': { 'Damage': [0, 40], 'Strength': [0, 25] },
          'LEGENDARY': { 'Damage': [0, 40], 'Strength': [0, 25] },
        },
        'GiantSlayer': {
          'LEGENDARY': [0, 25],
        },
      },
      'MAGMA_CUBE': {
        'BaseStats': { 'Strength': [0, 20], 'Health': [0, 50], 'Defense': [0, (33 + (4 / 3))] },
        'SlimyMinions': {
          'COMMON': [0, 20],
          'UNCOMMON': [0, 25],
          'RARE': [0, 25],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'SaltBlade': {
          'RARE': [0, 20],
          'EPIC': [0, 25],
          'LEGENDARY': [0, 25],
        },
        'HotEmber': {
          'LEGENDARY': [0, 50],
        },
      },
      'SUBZERO_WISP': {
        'BaseStats': { 'Damage': [0, 25], 'Intelligence': [0, 250], 'Health': [0, 600], 'TrueDefense': [0, 35] },
        'BlazeSlayer': [1, 1.5],
        'EphemeralStability': [0, 40],
      },
      'GLACIAL_WISP': {
        'BaseStats': { 'Damage': [0, 20], 'Intelligence': [0, 125], 'Health': [0, 400], 'TrueDefense': [0, 30] },
      },
      'FROST_WISP': {
        'BaseStats': { 'Damage': [0, 15], 'Intelligence': [0, 50], 'Health': [0, 250], 'TrueDefense': [0, 15] },
      },
      'DROPLET_WISP': {
        'BaseStats': { 'Damage': [0, 10], 'Health': [0, 100] },
      },
      'SPIDER': {
        'BaseStats': { 'Strength': [0, 10], 'CritChance': [0, 10] },
        'OneWiththeSpider': {
          'COMMON': [0, 10],
          'UNCOMMON': [0, 10],
          'RARE': [0, 10],
          'EPIC': [0, 10],
          'LEGENDARY': [0, 10],
          'MYTHIC': [0, 10],
        },
        'WebWeaver': {
          'RARE': [0, 40],
          'EPIC': [0, 40],
          'LEGENDARY': [0, 40],
          'MYTHIC': [0, 40],
        },
        'SpiderWhisperer': {
          'LEGENDARY': [0, 30],
          'MYTHIC': [0, 30],
        },
      },
      'TURTLE': {
        'BaseStats': { 'Health': [0, 50], 'Defense': [0, 100] },
        'TurtleTactics': {
          'EPIC': [3, 30],
          'LEGENDARY': [3, 30],
        },
        'GeniusAmniote': {
          'EPI': [5, 20],
          'LEGENDARY': [5, 30],
        },
        'TurtleShell': {
          'LEGENDARY': [0, 25],
        },
      },
      'ZOMBIE': {
        'BaseStats': { 'CritDamage': [0, 100], 'Health': [0, 100] },
        'Chomp': {
          'COMMON': [0, 15],
          'UNCOMMON': [0, 20],
          'RARE': [0, 20],
          'EPIC': [0, 25],
          'LEGENDARY': [0, 25],
        },
        'RottenBlade': {
          'RARE': [0, 20],
          'EPIC': [0, 25],
          'LEGENDARY': [0, 25],
        },
        'LivingDead': {
          'LEGENDARY': [0, 20],
        },
      },
      'HORSE': {
        'BaseStats': { 'Speed': [0, 25], 'Intelligence': [0, 50] },
        'Run': {
          'RARE': [0, 110],
          'EPIC': [0, 120],
          'LEGENDARY': [0, 120],
        },
        'RideIntoBattle': {
          'LEGENDARY': [0, 25],
        },
      },
      'HOUND': {
        'BaseStats': { 'Strength': [0, 40], 'BonusAttackSpeed': [0, 15], 'Ferocity': [0, 5] },
        'Scavenger': {
          'EPIC': [0, 5],
          'LEGENDARY': [0, 5],
        },
        'Finder': {
          'EPIC': [0, 10],
          'LEGENDARY': [0, 10],
        },
        'FuryClaws': {
          'LEGENDARY': [0, 10],
        },
      },
      'RIFT_FERRET': {
        'BaseStats': { 'Speed': [0, 50], 'Intelligence': [0, -2] },
      },
      'SPIRIT': {
        'BaseStats': { 'Speed': [0, 30], 'Intelligence': [0, 100] },
        'SpiritCooldowns': {
          'EPIC': [5, 50],
          'LEGENDARY': [5, 50],
        },
      },
      'SLUG': {
        'BaseStats': { 'Intelligence': [0, 25], 'Defense': [0, 20] },
        'SlowandSteady': {
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
        'PestFriends': {
          'EPIC': [0, 40],
          'LEGENDARY': [0, 40],
        },
        'RepugnantAroma': {
          'LEGENDARY': [0, 100],
        },
      },
      'BEE': {
        'BaseStats': { 'Strength': [5, 30], 'Speed': [0, 10], 'Intelligence': [0, 50] },
        'Hive': {
          'COMMON': { 'Intelligence': [1, 3], 'Strength': [1, 3], 'Defense': [1, 2] },
          'UNCOMMON': { 'Intelligence': [1, 3], 'Strength': [1, 3], 'Defense': [1, 2] },
          'RARE': { 'Intelligence': [1, 6], 'Strength': [1, 5], 'Defense': [1, 3] },
          'EPIC': { 'Intelligence': [1, 10], 'Strength': [1, 8], 'Defense': [1, 5] },
          'LEGENDARY': { 'Intelligence': [1, 10], 'Strength': [1, 8], 'Defense': [1, 5] },
        },
        'BusyBuzzBuzz': {
          'RARE': [0, 20],
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'WeaponizedHoney': {
          'LEGENDARY': [5, 25],
        },
      },
      'OWL': {
        'BaseStats': {},
      },
      'GOLEM': {
        'BaseStats': { 'Strength': [0, 50], 'Health': [0, 50] },
        'LastStand': {
          'EPIC': [0, 30],
          'LEGENDARY': [0, 30],
        },
        'Ricochet': {
          'EPIC': [0, 20],
          'LEGENDARY': [0, 25],
        },
        'Toss': {
          'LEGENDARY': [200, 500],
        },
      },
      'ENDER_DRAGON': {
        'BaseStats': { 'Strength': [0, 50], 'Health': [0, 150] },
        'EndStrike': {
          'EPIC': [0, 200],
          'LEGENDARY': [0, 200],
        },
        'OnewiththeDragons': {
          'EPIC': [0, 50],
          'LEGENDARY': [0, 50],
        },
      },
      'SHEEP': {
        'BaseStats': { 'Intelligence': [0, 100], 'AbilityDamage': [0, 20] },
        'ManaSaver': {
          'COMMON': [0, 10],
          'UNCOMMON': [0, 15],
          'RARE': [0, 15],
          'EPIC': [0, 20],
          'LEGENDARY': [0, 20],
        },
        'Overheal': {
          'RARE': [0, 10],
          'EPIC': [0, 10],
          'LEGENDARY': [0, 10],
        },
        'DungeonWizard': {
          'LEGENDARY': [0, 25],
        },
      },
    }


    const BulkwarkStats = {
      '100': { 'Defense': 30, 'TrueDefense': 3 },
      '200': { 'Defense': 60, 'TrueDefense': 6 },
      '300': { 'Defense': 90, 'TrueDefense': 9 },
      '500': { 'Defense': 135, 'TrueDefense': 14 },
      '800': { 'Defense': 180, 'TrueDefense': 18 },
    }




    let maxLevel;
    if (id === 'GOLDEN_DRAGON') {
      maxLevel = 200;
    }
    else {
      maxLevel = 100;
    }

    // console.log('id: ', id, 'BaseStats', extraPetStatsMinMax[id]['BaseStats'], 'RARITY', rarity)
    rarity = rarity.toUpperCase() as any;

    let rarityNumber = getNumericRepresentation(rarity); // 6 = mythic, 5 = legendary, 4 = epic, 3 = rare, 2 = uncommon, 1 = common
    /*
    category: minecraftColoredStringToText(`'', ${skin ? skin : ''}`),
    stats: minecraftColoredStringToText(`
  
    `),
    firstAbility: minecraftColoredStringToText(``),
    secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(``) : '',
    thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(``) : '',
    fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(``) : '',
    */
    switch (id) {
      case 'GOLDEN_DRAGON': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: (level >= 100) ? minecraftColoredStringToText(`
        ¬ß7Bonus Attack Speed: ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['BonusAttackSpeed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['BonusAttackSpeed'][1], minosRelic: relic })}ZEILENUMBRUCH
        ¬ß7Magic Find: ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['MagicFind'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['MagicFind'][1], minosRelic: relic })}\n
        `)
          : minecraftColoredStringToText(`¬ßc¬ßl???`),
        firstAbility: (level >= 100) ? minecraftColoredStringToText(`¬ß6Gold's PowerZEILENUMBRUCH¬ß7Adds ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['GoldsPower'][rarity][0] ?? 0, maxStat: extraPetStatsMinMax[id]['GoldsPower'][rarity][1] ?? 0 })}‚ùÅ Strength ¬ß7to all ¬ß6golden ¬ß6¬ß7weapons.`)
          : minecraftColoredStringToText(`¬ß7Hatches at level ¬ßb100`),
        secondAbility: (level >= 100) ? minecraftColoredStringToText(`¬ß6Shining ScalesZEILENUMBRUCH¬ß7Grants ¬ßc+10‚ùÅ Strength ¬ß7and ¬ßb+2‚úØ ¬ßbMagic Find ¬ß7to your pet for each digit in your ¬ß6gold collection¬ß7.`)
          : '',
        thirdAbility: (level >= 100) ? minecraftColoredStringToText(`¬ß6Dragon's GreedZEILENUMBRUCH¬ß7Grants ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['DragonsGreed'][rarity][0], maxStat: extraPetStatsMinMax[id]['LegendaryTreasure'][rarity][1] })}% ¬ßc‚ùÅ Strength ¬ß7per ¬ßb5 ¬ßb‚úØ¬ßbMagic Find¬ß7.`)
          : '',
        fourthAbility: (level >= 100) ? minecraftColoredStringToText(`¬ß6Legendary TreasureZEILENUMBRUCH¬ß7Gain ¬ßc${roundLegendaryTreasure(calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['LegendaryTreasure'][rarity][0], maxStat: extraPetStatsMinMax[id]['LegendaryTreasure'][rarity][1] }), level)}% ¬ß7damage for every million ¬ß7coins in your bank.`)
          : ''
      });
      case 'BAT': return ({
        category: minecraftColoredStringToText(`¬ß8Mining Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1], minosRelic: relic })}\n
      ¬ß7Intelligence: ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1], minosRelic: relic })}
      ${(rarityNumber >= 6) ? `ZEILENUMBRUCH¬ß7Sea Creature Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['SeaCreatureChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['SeaCreatureChance'][1], minosRelic: relic })}` : ''}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Candy LoverZEILENUMBRUCH¬ß7Increases drop chance of candies ¬ß7from mobs by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['CandyLover'][rarity][0], maxStat: extraPetStatsMinMax[id]['CandyLover'][rarity][1] })}¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6NightmareZEILENUMBRUCH¬ß7¬ß7During night, gain ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Nightmare'][rarity]['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['Nightmare'][rarity]['Intelligence'][1] })}¬ßb‚úé Intelligence¬ß7, ¬ß7¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Nightmare'][rarity]['Speed'][0], maxStat: extraPetStatsMinMax[id]['Nightmare'][rarity]['Speed'][1] })} ¬ßf‚ú¶ Speed¬ß7, and ¬ßaNight Vision¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Wings of SteelZEILENUMBRUCH¬ß7Deals ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['WingsOfSteel'][rarity][0], maxStat: extraPetStatsMinMax[id]['WingsOfSteel'][rarity][1] })}% ¬ß7damage to ¬ß6Spooky ¬ß6¬ß7enemies during the ¬ß6Spooky Festival¬ß7.`) : '',
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6SonarZEILENUMBRUCH¬ß7¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Sonar'][rarity][0], maxStat: extraPetStatsMinMax[id]['Sonar'][rarity][1] })}% ¬ß7chance to fish up spooky sea creatures.`) : ''
      });
      case 'BLACK_CAT': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1], minosRelic: relic })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1], minosRelic: relic })}ZEILENUMBRUCH
      ¬ß7Magic Find: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['MagicFind'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['MagicFind'][1], minosRelic: relic })}ZEILENUMBRUCH
      ¬ß7Pet Luck: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['PetLuck'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['PetLuck'][1], minosRelic: relic })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6HunterZEILENUMBRUCH¬ß7Increases your ¬ßf‚ú¶ Speed ¬ß7and speed ¬ß7cap by +¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Hunter'][rarity][0], maxStat: extraPetStatsMinMax[id]['Hunter'][rarity][1] })}¬ß7.`),
        secondAbility: minecraftColoredStringToText(`¬ß6OmenZEILENUMBRUCH¬ß7Grants ¬ßd+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Omen'][rarity][0], maxStat: extraPetStatsMinMax[id]['Omen'][rarity][1] })}‚ô£ Pet Luck¬ß7.`),
        thirdAbility: minecraftColoredStringToText(`¬ß6SupernaturalZEILENUMBRUCHGrants ¬ßb+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Supernatural'][rarity][0], maxStat: extraPetStatsMinMax[id]['Supernatural'][rarity][1] })}‚úØ Magic Find¬ß7.`),
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6LootingZEILENUMBRUCH¬ß7Gain ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Looting'][rarity][0], maxStat: extraPetStatsMinMax[id]['Looting'][rarity][0] })}% ¬ß7more collection items from", "¬ß7monsters!`) : ''
      });
      case 'ENDERMITE': return ({
        category: minecraftColoredStringToText(`¬ß8Mining Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}ZEILENUMBRUCH
      ¬ß7Pet Luck: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['PetLuck'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['PetLuck'][1] })}`
        ),
        firstAbility: minecraftColoredStringToText(`¬ß6More StonksZEILENUMBRUCH¬ß7Gain more exp orbs for breaking end ¬ß7stone and gain a +¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MoreStonks'][rarity][0], maxStat: extraPetStatsMinMax[id]['MoreStonks'][rarity][1] })}% ¬ß7chance to ¬ß7get an extra block dropped.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Daily CommuterZEILENUMBRUCH¬ß7¬ß9Transmission Abilities ¬ß7cost ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['DailyCommuter'][rarity][0], maxStat: extraPetStatsMinMax[id]['DailyCommuter'][rarity][1] })}% ¬ß7less ¬ß7mana."`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Mite BaitZEILENUMBRUCH¬ß7Gain a ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MiteBait'][rarity][0], maxStat: extraPetStatsMinMax[id]['MiteBait'][rarity][1] })}% ¬ß7chance to dig up a bonus ¬ß7¬ßcNest Endermite ¬ß7per ¬ßd+1‚ô£ Pet Luck ¬ßd¬ß8(Stacks above 100%).`) : '',
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6SacrificerZEILENUMBRUCH¬ß7Increases the odds of rolling for ¬ß7bonus items in the ¬ßcDraconic Altar ¬ß7by ¬ß7¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Sacrificer'][rarity][0], maxStat: extraPetStatsMinMax[id]['Sacrificer'][rarity][1] })}%¬ß7.`) : ''
      });
      case 'SILVERFISH': return ({
        category: minecraftColoredStringToText(`¬ß8Mining Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6True Defense BoostZEILENUMBRUCH¬ß7¬ß7Grants ¬ßf+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['TrueDefenseBoost'][rarity][0], maxStat: extraPetStatsMinMax[id]['TrueDefenseBoost'][rarity][1] })}‚ùÇ True Defense¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Mining Wisdom BoostZEILENUMBRUCH¬ß7¬ß7Grants ¬ß3+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MiningWisdomBoost'][rarity][0], maxStat: extraPetStatsMinMax[id]['MiningWisdomBoost'][rarity][1] })}‚òØ Mining Wisdom¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Dexterity:  ¬ß7¬ß7Gives permanent haste III.`) : '',
      });
      case 'ARMADILLO': return ({
        category: minecraftColoredStringToText(`¬ß8Mining Mount, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6RidableZEILENUMBRUCH¬ß7Right-click your summoned pet to ride it!`),
        secondAbility: minecraftColoredStringToText(`¬ß6TunnellerZEILENUMBRUCH¬ß7The Armadillo breaks all stone or ore in its path while you are riding it in the ¬ß5Crystal Hollows ¬ß7using your held item.`),
        thirdAbility: minecraftColoredStringToText(`¬ß6Earth SurferZEILENUMBRUCH¬ß7The Armadillo moves faster based on your ¬ßf‚ú¶ Speed¬ß7.`),
        fourthAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Rolling MinerZEILENUMBRUCH¬ß7Every ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RollingMiner'][rarity][0], maxStat: extraPetStatsMinMax[id]['RollingMiner'][rarity][1] })} ¬ß7seconds, the next ¬ß7gemstone you mine gives ¬ßa2x ¬ß7drops.`) : '',
        fifthAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Mobile TankZEILENUMBRUCH¬ß7For every ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MobileTank'][rarity][0], maxStat: extraPetStatsMinMax[id]['MobileTank'][rarity][1] })} ¬ßa‚ùà Defense¬ß7, gain ¬ßf+1 ‚ú¶ ¬ßfSpeed ¬ß7and ¬ß6+1‚∏ï Mining Speed¬ß7.`) : '',
      });
      case 'MITHRIL_GOLEM': return ({
        category: minecraftColoredStringToText(`¬ß8Mining Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7True Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['TrueDefense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['TrueDefense'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`"¬ß6Mithril AffinityZEILENUMBRUCH¬ß7Gain ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MithrilAffinity'][rarity][0], maxStat: extraPetStatsMinMax[id]['MithrilAffinity'][rarity][1] })} ¬ß6‚∏ï Mining Speed ¬ß7when mining ¬ß7¬ßeMithril¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`"¬ß6The Smell Of PowderZEILENUMBRUCH¬ß7Gain ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['TheSmellOfPowder'][rarity][0], maxStat: extraPetStatsMinMax[id]['TheSmellOfPowder'][rarity][1] })}% ¬ß7more ¬ß2Mithril Powder ¬ß7while mining."`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Danger AverseZEILENUMBRUCH¬ß7Increases most combat stats by ¬ß7¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['DangerAverse'][rarity][0], maxStat: extraPetStatsMinMax[id]['DangerAverse'][rarity][1] })}% ¬ß7on mining islands.`) : '',
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6Refined SensesZEILENUMBRUCH¬ß7Increases your ¬ßb‚úØ Magic Find ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RefinedSenses'][rarity][0], maxStat: extraPetStatsMinMax[id]['RefinedSenses'][rarity][1] })}% ¬ßa¬ß7when on a Mining Island.`) : '',
      });
      case 'SNAIL': return ({
        category: minecraftColoredStringToText(`¬ß8Mining Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`"¬ß6Red Sand EnjoyerZEILENUMBRUCH¬ß7Red Sand minions work ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RedSandEnjoyer'][rarity][0], maxStat: extraPetStatsMinMax[id]['RedSandEnjoyer'][rarity][1] })}% ¬ß7faster while on your island.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`"¬ß6Slow MovingZEILENUMBRUCH¬ß7Converts all ¬ßf‚ú¶ Speed ¬ß7over 100 into ¬ß7¬ß6‚òò Mining Fortune ¬ß7for non-ores at ¬ß7¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['SlowMoving'][rarity][0], maxStat: extraPetStatsMinMax[id]['SlowMoving'][rarity][1] })}% ¬ß7efficiency.`) : '', //TODO Checking if I can easily implement this: 'Current bonus: ¬ß6+0‚òò'
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Slow But EfficientZEILENUMBRUCH¬ß7Reduces the mana cost of ¬ß9Utility Abilities ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['SlowButEfficient'][rarity][0], maxStat: extraPetStatsMinMax[id]['SlowButEfficient'][rarity][1] })}% ¬ß7 for every 15 ¬ßf‚ú¶ Speed ¬ß7converted.`) : '',
      });
      case 'WITHER_SKELETON': return ({
        category: minecraftColoredStringToText(`¬ß8Mining Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][1] })}%ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%
      `),
        firstAbility: (rarityNumber >= 4) ? minecraftColoredStringToText(`¬ß6Stronger BonesZEILENUMBRUCH¬ß7Take ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['StrongerBones'][rarity][0], maxStat: extraPetStatsMinMax[id]['StrongerBones'][rarity][1] })}% ¬ß7less damage from skeletons.`) : '',
        secondAbility: (rarityNumber >= 4) ? minecraftColoredStringToText(`¬ß6Wither BloodZEILENUMBRUCH¬ß7Deal ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['WitherBlood'][rarity][0], maxStat: extraPetStatsMinMax[id]['WitherBlood'][rarity][1] })}% ¬ß7more damage to wither mobs.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Death's TouchZEILENUMBRUCH¬ß7Upon hitting an enemy inflict the ¬ß7wither effect for ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['DeathsTouch'][rarity][0], maxStat: extraPetStatsMinMax[id]['DeathsTouch'][rarity][0] })}% ¬ß7damage over ¬ß73 seconds. ¬ß8Does not stack`) : '',
      });
      case 'SCATHA': return ({
        category: minecraftColoredStringToText(`¬ß8Mining Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}ZEILENUMBRUCH
      ¬ß7Mining Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['MiningSpeed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['MiningSpeed'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6GroundedZEILENUMBRUCH¬ß7Gain ¬ß6+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Grounded'][rarity][0], maxStat: extraPetStatsMinMax[id]['Grounded'][rarity][1] })}‚òò Mining Fortune¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6BurrowingZEILENUMBRUCH¬ß7Grants a ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Burrowing'][rarity][0], maxStat: extraPetStatsMinMax[id]['Burrowing'][rarity][1] })}% ¬ß7chance to find ¬ß7treasure while mining.`) : '',
        thirdAbility: (rarityNumber >= 4) ? minecraftColoredStringToText(`¬ß6WormholeZEILENUMBRUCH¬ß7Gives a ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Wormhole'][rarity][0], maxStat: extraPetStatsMinMax[id]['Wormhole'][rarity][1] })}% ¬ß7chance to mine 2 ¬ß7adjacent stone or hard stone.`) : '',
        fourthAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Gemstone PowerZEILENUMBRUCH¬ß7Gain ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['GemstonePower'][rarity][0], maxStat: extraPetStatsMinMax[id]['GemstonePower'][rarity][1] })}% ¬ß7more ¬ßdGemstone Powder¬ß7.`) : '',
      });
      case 'ROCK': return ({
        category: minecraftColoredStringToText(`¬ß8Mining Mount, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}ZEILENUMBRUCH
      ¬ß7True Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['TrueDefense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['TrueDefense'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Ridable", "¬ß7¬ß7Right-click your summoned pet to ride it!`),
        secondAbility: minecraftColoredStringToText(`¬ß6Sailing StoneZEILENUMBRUCH¬ß7Sneak to move your rock to your location (15s cooldown).`),
        thirdAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6FortifyZEILENUMBRUCH¬ß7While sitting on your rock, gain +¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Fortify'][rarity][0], maxStat: extraPetStatsMinMax[id]['Fortify'][rarity][1] })}% ¬ßa¬ß7defense.`) : '',
        fourthAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Steady GroundZEILENUMBRUCH¬ß7While sitting on your rock, deal ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['SteadyGround'][rarity][0], maxStat: extraPetStatsMinMax[id]['SteadyGround'][rarity][1] })}x ¬ßc¬ß7damage.`) : '', //TODO: Check if this is correct
      });
      case 'BAL': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
        ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
        ¬ß7Ferocity: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Protective Skin_ ¬ß7¬ß7Gives ¬ßcheat immunity¬ß7.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Fire WhipZEILENUMBRUCH¬ß7Every ¬ßa5s ¬ß7while in combat on public ¬ß7islands, Bal will strike nearby enemies with his fire whip dealing ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['FireWhip'][rarity][0], maxStat: extraPetStatsMinMax[id]['FireWhip'][rarity][1] })}% ¬ßc¬ß7of your damage as ¬ßftrue damage¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Made of LavaZEILENUMBRUCH¬ß7Gain ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MadeofLava'][rarity][0], maxStat: extraPetStatsMinMax[id]['MadeofLava'][rarity][1] })}% ¬ß7on ALL stats when inside the ¬ßcMagma Fields¬ß7.`) : '',
      });
      case 'ZOMBIE': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6ChompZEILENUMBRUCH¬ß7Heal ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Chomp'][rarity][0], maxStat: extraPetStatsMinMax[id]['Chomp'][rarity][1] })}‚ù§ ¬ß7per Zombie kill.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Rotten BladeZEILENUMBRUCH¬ß7Deal ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RottenBlade'][rarity][0], maxStat: extraPetStatsMinMax[id]['RottenBlade'][rarity][1] })}% ¬ß7more damage to zombies.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Living DeadZEILENUMBRUCH¬ß7Increases all stats on ¬ß2undead ‡ºï ¬ß2¬ß7armor by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['LivingDead'][rarity][0], maxStat: extraPetStatsMinMax[id]['LivingDead'][rarity][1] })}%¬ß7.`) : '',
      });
      case 'WOLF': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet  , ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+$${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Speed: ¬ßa+$${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%ZEILENUMBRUCH
      ¬ß7True Defense: ¬ßa+$${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['TrueDefense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['TrueDefense'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Alpha DogZEILENUMBRUCH¬ß7Take ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['AlphaDog'][rarity][0], maxStat: extraPetStatsMinMax[id]['AlphaDog'][rarity][1] })}% ¬ß7less damage from wolves.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Pack LeaderZEILENUMBRUCH¬ß7Gain ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['PackLeader'][rarity][0], maxStat: extraPetStatsMinMax[id]['PackLeader'][rarity][1] })} ¬ß9‚ò† Crit Damage ¬ß7for every nearby wolf monster. ¬ß8Max 10 wolves`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Combat Wisdom BoostZEILENUMBRUCH¬ß7¬ß7Grants ¬ß3+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['CombatWisdomBoost'][rarity][0], maxStat: extraPetStatsMinMax[id]['CombatWisdomBoost'][rarity][1] })}‚òØ Combat Wisdom¬ß7.`) : '',
      });
      case 'TURTLE': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Turtle TacticsZEILENUMBRUCH¬ß7Gain ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['TurtleTactics'][rarity][0], maxStat: extraPetStatsMinMax[id]['TurtleTactics'][rarity][1] })}% ¬ßa‚ùà Defense¬ß7.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Genius AmnioteZEILENUMBRUCH¬ß7Grants ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['GeniusAmniote'][rarity][0], maxStat: extraPetStatsMinMax[id]['GeniusAmniote'][rarity][0] })}‚ùà Defense ¬ß7for every ¬ß7player around you, up to 4 nearby ¬ß7players.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6UnflippableZEILENUMBRUCH¬ß7Gain ¬ßaimmunity ¬ß7to knockback.`) : '',
        fourthAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Turtle ShellZEILENUMBRUCH¬ß7When under ¬ßc33% ¬ß7maximum HP, you take ¬ß7¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['TurtleShell'][rarity][0], maxStat: extraPetStatsMinMax[id]['TurtleShell'][rarity][1] })}% ¬ß7less damage.`) : '',
      });
      case 'TIGER': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][1] })}%ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%ZEILENUMBRUCH
      ¬ß7Ferocity: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Merciless SwipeZEILENUMBRUCH¬ß7Gain ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MercilessSwipe'][rarity][0], maxStat: extraPetStatsMinMax[id]['MercilessSwipe'][rarity][1] })}% ¬ßc‚´Ω Ferocity¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Hemorrhage: ¬ß7¬ß7Melee attacks reduce healing by ¬ß6${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Hemorrhage'][rarity][0], maxStat: extraPetStatsMinMax[id]['Hemorrhage'][rarity][1] })}% ¬ß6¬ß7for ¬ßa10s¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Apex PredatorZEILENUMBRUCH¬ß7Deal ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ApexPredator'][rarity][0], maxStat: extraPetStatsMinMax[id]['ApexPredator'][rarity][1] })}% ¬ß7damage against targets with no other mobs within ¬ßa15 ¬ß7blocks.`) : '',
      });
      case 'TARANTULA': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][1] })}%ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Webbed CellsZEILENUMBRUCH¬ß7Anti-healing is ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['WebbedCells'][rarity][0], maxStat: extraPetStatsMinMax[id]['WebbedCells'][rarity][1] })}% ¬ß7less effective against you.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Eight LegsZEILENUMBRUCH¬ß7Decreases the mana cost of Spider, ¬ß7Tarantula and Spirit Boots by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['EightLegs'][rarity][0], maxStat: extraPetStatsMinMax[id]['EightLegs'][rarity][1] })}%¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Arachnid SlayerZEILENUMBRUCH¬ß7Gain ¬ßb${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ArachnidSlayer'][rarity][0], maxStat: extraPetStatsMinMax[id]['ArachnidSlayer'][rarity][1] })}x ¬ß7Combat XP ¬ß7against ¬ßaSpiders¬ß7.`) : '',
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6Web BattlefieldZEILENUMBRUCH¬ß7Killing mobs grants ¬ßc+6‚ùÅ Strength ¬ßc¬ß7and ¬ßb+1‚úØ Magic Find ¬ß7for ¬ßa40s ¬ß7to all players staying within ¬ßa20 ¬ß7blocks ¬ß7of ¬ß7where they died. ¬ß8Stacks up to 10 times.`) : '',
      });
      case 'SPIRIT': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Spirit AssistanceZEILENUMBRUCH¬ß7Spawns and assists you when you ¬ß7are a ghost in Dungeons.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Spirit CooldownsZEILENUMBRUCH¬ß7Reduces the cooldown of your ghost", "¬ß7abilities in dungeons by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['SpiritCooldowns'][rarity][0], maxStat: extraPetStatsMinMax[id]['SpiritCooldowns'][rarity][1] })}%¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Half LifeZEILENUMBRUCH¬ß7If you are the first player to die in ¬ß7a dungeon, the score penalty for ¬ß7that death is reduced to ¬ßa1¬ß7.`) : '',
      });
      case 'SPIDER': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6One With The SpiderZEILENUMBRUCH¬ß7Gain ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['OneWiththeSpider'][rarity][0], maxStat: extraPetStatsMinMax[id]['OneWiththeSpider'][rarity][1] })} ¬ßc‚ùÅ Strength ¬ß7for every ¬ß7nearby spider. ¬ß8Max 10 spiders`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Web-weaverZEILENUMBRUCH¬ß7Upon hitting a monster, it becomes ¬ß7slowed by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['WebWeaver'][rarity][0], maxStat: extraPetStatsMinMax[id]['WebWeaver'][rarity][1] })}}%¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Spider WhispererZEILENUMBRUCH¬ß7Spider and tarantula minions work ¬ß7¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['SpiderWhisperer'][rarity][0], maxStat: extraPetStatsMinMax[id]['SpiderWhisperer'][rarity][1] })}% ¬ß7faster while on your island.`) : '',
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6Web BattlefieldZEILENUMBRUCH¬ß7Killing mobs grants ¬ßc+6‚ùÅ Strength ¬ßc¬ß7and ¬ßb+1‚úØ Magic Find ¬ß7for ¬ßa40s ¬ß7to all players staying within ¬ßa20 ¬ß7blocksof where they died. ¬ß8Stacks up to 10", "¬ß8times.`) : '',
      });
      case 'SNOWMAN': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Damage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Damage'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6BlizzardZEILENUMBRUCH¬ß7Slow all enemies within ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Blizzard'][rarity][0], maxStat: extraPetStatsMinMax[id]['Blizzard'][rarity][1] })} ¬ß7blocks.`),
        secondAbility: minecraftColoredStringToText(`¬ß6FrostbiteZEILENUMBRUCH¬ß7Your freezing aura slows enemy attacks causing you to take ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Frostbite'][rarity][0], maxStat: extraPetStatsMinMax[id]['Frostbite'][rarity][1] })}% ¬ßa¬ß7reduced damage.`),
        thirdAbility: minecraftColoredStringToText(`¬ß6Snow CannonZEILENUMBRUCH¬ß7Your snowman fires a snowball dealing ¬ßa5x¬ß7 your ¬ßc‚ùÅ Strength ¬ß7when a mob gets close to you (1s cooldown).`),
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6Ouch!ZEILENUMBRUCH¬ß7¬ß7Your snowballs have ¬ßa50% ¬ß7chance of dealing ¬ßcdouble ¬ß7damage!`) : '',
      });
      case 'SKELETON': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Crit Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][1] })}%ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Bone ArrowsZEILENUMBRUCH¬ß7Increase arrow damage by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BoneArrows'][rarity][0], maxStat: extraPetStatsMinMax[id]['BoneArrows'][rarity][1] })}%¬ß7 which is tripled while in dungeons.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6ComboZEILENUMBRUCH¬ß7Gain a combo stack for every bow hit granting +¬ßa3 ¬ßc‚ùÅ Strength¬ß7. Max ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Combo'][rarity][0], maxStat: extraPetStatsMinMax[id]['Combo'][rarity][1] })} ¬ßa¬ß7stacks, stacks disappear after 8 seconds.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Skeletal DefenseZEILENUMBRUCH¬ß7Your skeleton shoots an arrow dealing ¬ßa30x ¬ß7your ¬ß9‚ò† Crit Damage ¬ß9¬ß7when a mob gets close to you (5s cooldown).`) : '',
      });
      case 'SKELETON_HORSE': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Mount, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6RidableZEILENUMBRUCH¬ß7Right-click your summoned pet to ride it!`),
        secondAbility: minecraftColoredStringToText(`¬ß6RunZEILENUMBRUCH¬ß7Increases the speed of your mount by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Run'][rarity][0], maxStat: extraPetStatsMinMax[id]['Run'][rarity][1] })}%¬ß7.`),
        thirdAbility: minecraftColoredStringToText(`¬ß6Ride Into BattleZEILENUMBRUCH¬ß7While riding your horse, gain +¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RideIntoBattle'][rarity][0], maxStat: extraPetStatsMinMax[id]['RideIntoBattle'][rarity][1] })}% ¬ßa¬ß7bow damage.`),
      });
      case 'RAT':
        // console.log(extraPetStatsMinMax[id]['RatsBlessing'][rarity]['MagicFind'][1])
        return ({
          category: minecraftColoredStringToText(`¬ß8Combat Morph, ${skin ? skin : ''}`),
          stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%
      `),
          firstAbility: minecraftColoredStringToText(`¬ß6MorphZEILENUMBRUCH¬ß7Right-click your summoned pet to morph into it!`),
          secondAbility: minecraftColoredStringToText(`¬ß6CHEESE!ZEILENUMBRUCH¬ß7As a Rat, you smell ¬ße¬ßlCHEESE¬ß7 nearby! ¬ß7Yummy!`),
          thirdAbility: minecraftColoredStringToText(`¬ß6Rat's BlessingZEILENUMBRUCH¬ß7Has a chance to grant a random ¬ß7player ¬ßb+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RatsBlessing'][rarity]['MagicFind'][0], maxStat: extraPetStatsMinMax[id]['RatsBlessing'][rarity]['MagicFind'][1] })}‚úØ Magic Find¬ß7 for ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RatsBlessing'][rarity]['Seconds'][0], maxStat: extraPetStatsMinMax[id]['RatsBlessing'][rarity]['Seconds'][1] })}¬ß7 ¬ß7seconds after finding a yummy piece of Cheese! If the player gets a drop during this buff, you have a ¬ßa20%¬ß7 ¬ß7chance to get it too.`),
          fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6Extreme SpeedZEILENUMBRUCH¬ß7The Rat is TWO times faster AND can ¬ß7fly!`) : '',
        });
      case 'PIGMAN': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Ferocity: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Bacon FarmerZEILENUMBRUCH¬ß7Pig minions work ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaconFarmer'][rarity][0], maxStat: extraPetStatsMinMax[id]['BaconFarmer'][rarity][1] })}% ¬ß7faster while on your island.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Pork MasterZEILENUMBRUCH¬ß7Buffs the ¬ß6Pigman Sword ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['PorkMaster'][rarity][0], maxStat: extraPetStatsMinMax[id]['PorkMaster'][rarity][1] })} ¬ßc‚ùÅ Damage ¬ß7and ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['PorkMaster'][rarity][0], maxStat: extraPetStatsMinMax[id]['PorkMaster'][rarity][1] })} ¬ßc‚ùÅ Strength¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Giant SlayerZEILENUMBRUCH¬ß7Deal ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['GiantSlayer'][rarity][0], maxStat: extraPetStatsMinMax[id]['GiantSlayer'][rarity][1] })}% ¬ß7extra damage to monsters level 100 and up.`) : '',
      });
      case 'PHOENIX': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6RekindleZEILENUMBRUCH¬ß7Before death, become ¬ßeimmune ¬ß7and gain ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Rekindle'][rarity]['Strength'][0], maxStat: extraPetStatsMinMax[id]['Rekindle'][rarity]['Strength'][1] })} ¬ßc‚ùÅ Strength ¬ß7for ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Rekindle'][rarity]['Seconds'][0], maxStat: extraPetStatsMinMax[id]['Rekindle'][rarity]['Seconds'][1] })} ¬ß7seconds. ¬ß860s cooldown`),
        secondAbility: minecraftColoredStringToText(`¬ß6Fourth FlareZEILENUMBRUCH¬ß7On 4th melee strike, ¬ß6ignite ¬ß7mobs, dealing ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['FourthFlare'][rarity]['Value'][0], maxStat: extraPetStatsMinMax[id]['FourthFlare'][rarity]['Value'][1] })}x ¬ß7your ¬ß9‚ò† Crit Damage ¬ß9¬ß7each second for ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['FourthFlare'][rarity]['Seconds'][0], maxStat: extraPetStatsMinMax[id]['FourthFlare'][rarity]['Seconds'][1] })} ¬ß7seconds.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Magic BirdZEILENUMBRUCH¬ß7You may always fly on your private island and garden.`) : '',
        fourtAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Eternal CoinsZEILENUMBRUCH¬ß7Don't lose coins from death.`) : '',
      });
      case 'MAGMA_CUBE': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Slimy MinionsZEILENUMBRUCH¬ß7Slime minions work ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['SlimyMinions'][rarity][0], maxStat: extraPetStatsMinMax[id]['SlimyMinions'][rarity][1] })}% ¬ß7faster while on your island.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Salt BladeZEILENUMBRUCH¬ß7Deal ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['SaltBlade'][rarity][0], maxStat: extraPetStatsMinMax[id]['SaltBlade'][rarity][1] })}% ¬ß7more damage to slimes.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Hot EmberZEILENUMBRUCH¬ß7Buffs the stats of ¬ß5Rekindled Ember ¬ß5Armor ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['HotEmber'][rarity][0], maxStat: extraPetStatsMinMax[id]['HotEmber'][rarity][1] })}%¬ß7.`) : '',
      });
      case 'JERRY': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Intelligence: ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6JerryZEILENUMBRUCH¬ß7Gain ¬ßa50% ¬ß7chance to deal your regular damage.`),
        secondAbility: minecraftColoredStringToText(`¬ß6JerryZEILENUMBRUCH¬ß7Gain ¬ßa100% ¬ß7chance to receive a normal amount of drops from mobs.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6JerryZEILENUMBRUCH¬ß7Actually adds ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Jerry'][rarity][0], maxStat: extraPetStatsMinMax[id]['Jerry'][rarity][1] })} damage ¬ß7to the Aspect of the Jerry.`) : '',
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6JerryZEILENUMBRUCH¬ß7Tiny chance to find Jerry Candies when killing mobs.`) : '',
      });
      case 'HOUND': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Bonus Attack Speed: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['BonusAttackSpeed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['BonusAttackSpeed'][1] })}%ZEILENUMBRUCH
      ¬ß7Ferocity: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6ScavengerZEILENUMBRUCH¬ß7Gain +¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Scavenger'][rarity][0], maxStat: extraPetStatsMinMax[id]['Scavenger'][rarity][1] })} ¬ß7coins per monster kill.`),
        secondAbility: minecraftColoredStringToText(`¬ß6FinderZEILENUMBRUCH¬ß7Increases the chance for monsters to drop their armor by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Finder'][rarity][0], maxStat: extraPetStatsMinMax[id]['Finder'][rarity][1] })}%¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Fury ClawsZEILENUMBRUCH¬ß7Grants ¬ße+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['FuryClaws'][rarity][0], maxStat: extraPetStatsMinMax[id]['FuryClaws'][rarity][1] })}‚öî Bonus Attack Speed¬ß7.`) : '',
      });
      case 'HORSE': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Mount, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6RidableZEILENUMBRUCH¬ß7Right-click your summoned pet to ride it!`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6RunZEILENUMBRUCH¬ß7Increases the speed of your mount by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Run'][rarity][0], maxStat: extraPetStatsMinMax[id]['Run'][rarity][1] })}%¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Ride Into BattleZEILENUMBRUCH¬ß7While riding your horse, gain +¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RideIntoBattle'][rarity][0], maxStat: extraPetStatsMinMax[id]['RideIntoBattle'][rarity][1] })}% ¬ßa¬ß7bow damage.`) : '',
      });
      case 'GRANDMA_WOLF': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`
      ¬ß6Kill ComboZEILENUMBRUCH¬ß7Gain buffs for combo kills. Effects stack as you increase your combo.ZEILENUMBRUCH¬ßa5 Combo ¬ß8(lasts ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['5'][0], maxStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['5'][1] })}s¬ß8)ZEILENUMBRUCH
      ¬ß8¬ßb+${extraPetStatsMinMax[id]['KillCombo'][rarity]['MagicFind5']}‚úØ Magic FindZEILENUMBRUCH
      ¬ßa10 Combo ¬ß8(lasts ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['10'][0], maxStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['10'][1] })}s¬ß8)ZEILENUMBRUCH
      ¬ß8+¬ß6${extraPetStatsMinMax[id]['KillCombo'][rarity]['Coins10']} ¬ß7coins per killZEILENUMBRUCH
      ¬ßa15 Combo ¬ß8(lasts ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['15'][0], maxStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['15'][1] })}s¬ß8)ZEILENUMBRUCH
      ¬ß8¬ßb+${extraPetStatsMinMax[id]['KillCombo'][rarity]['MagicFind15']}‚úØ Magic FindZEILENUMBRUCH
      ¬ßa20 Combo ¬ß8(lasts ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['20'][0], maxStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['20'][1] })}s¬ß8)ZEILENUMBRUCH
      ¬ß8¬ß3+${extraPetStatsMinMax[id]['KillCombo'][rarity]['CombatWisdom20']}‚òØ Combat WisdomZEILENUMBRUCH
      ¬ßa25 Combo ¬ß8(lasts ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['25'][0], maxStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['25'][1] })}s¬ß8)ZEILENUMBRUCH
      ¬ß8¬ßb+${extraPetStatsMinMax[id]['KillCombo'][rarity]['MagicFind25']}‚úØ Magic FindZEILENUMBRUCH
      ¬ßa30 Combo ¬ß8(lasts ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['30'][0], maxStat: extraPetStatsMinMax[id]['KillCombo'][rarity]['30'][1] })}s¬ß8)ZEILENUMBRUCH
      ¬ß8+¬ß6${extraPetStatsMinMax[id]['KillCombo'][rarity]['Coins30']} ¬ß7coins per kill
      `),
      });
      case 'GRIFFIN': return ({
        // ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}ZEILENUMBRUCH //TODO: Implement Pet Items which can add / change stats
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][1] })}%ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%ZEILENUMBRUCH
      ¬ß7Magic Find: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['MagicFind'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['MagicFind'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6OdysseyZEILENUMBRUCH¬ß7¬ß2Mythological creatures ¬ß7you find and burrows you dig scale in ¬ßcdifficulty ¬ßc¬ß7and ¬ß6rewards ¬ß7based on your equipped Griffin's rarity.`),
        secondAbility: (rarityNumber >= 2) ? minecraftColoredStringToText(`¬ß6Legendary ConstitutionZEILENUMBRUCH¬ß7Permanent ¬ßcRegeneration ${extraPetStatsMinMax[id]['LegendaryConstitution'][rarity]['Regeneration']} ¬ß7and ¬ß7¬ß4Strength ${extraPetStatsMinMax[id]['LegendaryConstitution'][rarity]['Strength']}¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 4) ? minecraftColoredStringToText(`¬ß6Perpetual EmpathyZEILENUMBRUCHHeal nearby players for ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['PerpetualEmpathy'][rarity][0], maxStat: extraPetStatsMinMax[id]['PerpetualEmpathy'][rarity][1] })}% ¬ß7of the final damage you receive.ZEILENUMBRUCH¬ß8Excludes other griffins.`) : '',
        fourthAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6King of KingsZEILENUMBRUCH¬ß7Gain ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['KingofKings'][rarity][0], maxStat: extraPetStatsMinMax[id]['KingofKings'][rarity][1] })}% ¬ßc‚ùÅ Strength ¬ß7when above ¬ß7¬ßc85% ¬ß7health.`) : '',
      });
      case 'GOLEM': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Last StandZEILENUMBRUCH¬ß7While at less than ¬ßa25% HP¬ß7, deal ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['LastStand'][rarity][0], maxStat: extraPetStatsMinMax[id]['LastStand'][rarity][1] })}% ¬ßa¬ß7more damage.`),
        secondAbility: minecraftColoredStringToText(`¬ß6RicochetZEILENUMBRUCH¬ß7Your iron plating causes ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Ricochet'][rarity][0], maxStat: extraPetStatsMinMax[id]['Ricochet'][rarity][1] })}% ¬ß7of attacks to ricochet and hit the ¬ß7attacker.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6TossZEILENUMBRUCH¬ß7Every 5 hits, throw the enemy up into ¬ß7the air and deal ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Toss'][rarity][0], maxStat: extraPetStatsMinMax[id]['Toss'][rarity][1] })}% ¬ß7damage (10s cooldown).`) : '',
      });
      case 'GHOUL': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}ZEILENUMBRUCH
      ¬ß7Ferocity: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Amplified HealingZEILENUMBRUCH¬ß7Grants ¬ß4+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['AmplifiedHealing'][rarity][0], maxStat: extraPetStatsMinMax[id]['AmplifiedHealing'][rarity][1] })}‚ô® Vitality¬ß7, which increases your incoming healing.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Zombie ArmZEILENUMBRUCH¬ß7Increases the health and range of the ¬ß9Zombie Sword ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ZombieArm'][rarity][0], maxStat: extraPetStatsMinMax[id]['ZombieArm'][rarity][1] })}%¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Reaper SoulZEILENUMBRUCH¬ß7Increases the health and lifespan of the ¬ß6Reaper Scythe ¬ß7zombies by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ReaperSoul'][rarity][0], maxStat: extraPetStatsMinMax[id]['ReaperSoul'][rarity][1] })}%¬ß7.`) : '',
      });
      case 'ENDERMAN': return ({
        category: minecraftColoredStringToText(`¬ß8Combat Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6EnderianZEILENUMBRUCH¬ß7¬ß7Take ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Enderian'][rarity][0], maxStat: extraPetStatsMinMax[id]['Enderian'][rarity][1] })}% ¬ß7less damage from end monsters.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Teleport SavvyZEILENUMBRUCH¬ß7¬ß7Buffs the Transmission abilitiesZEILENUMBRUCH¬ß7granting ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['TeleportSavyy'][rarity][0], maxStat: extraPetStatsMinMax[id]['TeleportSavyy'][rarity][1] })} ¬ß7weapon damage for 5s on use.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Zealot MadnessZEILENUMBRUCH¬ß7¬ß7Increases your odds to find a", "¬ß7special Zealot by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ZealotMadness'][rarity][0], maxStat: extraPetStatsMinMax[id]['ZealotMadness'][rarity][1] })}%¬ß7.`) : '',
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6Enderman SlayerZEILENUMBRUCH¬ß7¬ß7Gain ¬ßb${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['EndermanSlayer'][rarity][0], maxStat: extraPetStatsMinMax[id]['EndermanSlayer'][rarity][1] })}x ¬ß7Combat XP ¬ß7against ¬ßaEndermen¬ß7.`) : '',
      });
      case 'SLUG': return ({
        category: minecraftColoredStringToText(`¬ß8Farming Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Slow and SteadyZEILENUMBRUCH¬ß7¬ß7When fishing in the ¬ßcCrimson Isle¬ß7, ¬ß7¬ßaSlugfish ¬ß7take ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['SlowandSteady'][rarity][0], maxStat: extraPetStatsMinMax[id]['SlowandSteady'][rarity][1] })}% ¬ß7less time to catch.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Pest FriendsZEILENUMBRUCH¬ß7¬ß7¬ß7Grants ¬ß2+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['PestFriends'][rarity][0], maxStat: extraPetStatsMinMax[id]['PestFriends'][rarity][1] })}‡µ† Bonus Pest Chance¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Repugnant AromaZEILENUMBRUCH¬ß7¬ß7When farming in a plot affected by a ¬ßaSprayonator¬ß7, gain ¬ß6+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RepugnantAroma'][rarity][0], maxStat: extraPetStatsMinMax[id]['RepugnantAroma'][rarity][1] })}‚òò Farming Fortune¬ß7.`) : '',
      });
      case 'RABBIT': return ({
        category: minecraftColoredStringToText(`¬ß8Farming Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Happy FeetZEILENUMBRUCH¬ß7¬ß7Jump potions also give ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['HappyFeet'][rarity][0], maxStat: extraPetStatsMinMax[id]['HappyFeet'][rarity][1] })} ¬ß7speed.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Farming Wisdom BoostZEILENUMBRUCH¬ß7¬ß7¬ß7Grants ¬ß3+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['FarmingWisdomBoost'][rarity][0], maxStat: extraPetStatsMinMax[id]['FarmingWisdomBoost'][rarity][1] })}‚òØ Farming Wisdom¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Efficient FarmingZEILENUMBRUCH¬ß7¬ß7Farming minions work ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['EfficientFarming'][rarity][0], maxStat: extraPetStatsMinMax[id]['EfficientFarming'][rarity][1] })}% ¬ß7faster while on your island.`) : '',
      });
      case 'MOOSHROOM_COW': return ({
        category: minecraftColoredStringToText(`¬ß8Farming Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Farming Fortune: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['FarmingFortune'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['FarmingFortune'][1] })}‚òòZEILENUMBRUCH
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Efficient MushroomsZEILENUMBRUCH¬ß7¬ß7Mushroom¬ß7 and Mycelium minions work ¬ß7¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['EfficientMushrooms'][rarity][0], maxStat: extraPetStatsMinMax[id]['EfficientMushrooms'][rarity][1] })}% ¬ß7faster while on your island.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Mushroom EaterZEILENUMBRUCH¬ß7¬ß7When breaking mature crops, there is a ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MushroomEater'][rarity][0], maxStat: extraPetStatsMinMax[id]['MushroomEater'][rarity][1] })}% ¬ß7chance that a mushroom will drop.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Farming StrengthZEILENUMBRUCH¬ß7¬ß7Gain ¬ß6+0.7‚òò Farming Fortune ¬ß7per every ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['FarmingStrength'][rarity][0], maxStat: extraPetStatsMinMax[id]['FarmingStrength'][rarity][1] })} ¬ßc‚ùÅ Strength¬ß7.`) : '',
      });
      case 'PIG': return ({
        category: minecraftColoredStringToText(`¬ß8Farming Mount, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6RidableZEILENUMBRUCH¬ß7¬ß7Right-click your summoned pet to ride it!`),
        secondAbility: minecraftColoredStringToText(`¬ß6RunZEILENUMBRUCH¬ß7¬ß7Increases the speed of your mount by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Run'][rarity][0], maxStat: extraPetStatsMinMax[id]['Run'][rarity][1] })}%¬ß7.`),
        thirdAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6SprintZEILENUMBRUCH¬ß7¬ß7While holding an ¬ßaEnchanted Carrot on ¬ßaa Stick¬ß7, increases the speed of your mount by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Sprint'][rarity][0], maxStat: extraPetStatsMinMax[id]['Sprint'][rarity][1] })}%¬ß7.`) : '',
        fourthAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6TrampleZEILENUMBRUCH¬ß7¬ß7Your pig will break all crops that it walks over while on your private island or Garden. While riding, ¬ß6‚òòFarming Fortune ¬ß7and ¬ßaFarming Exp ¬ßa¬ß7gain is reduced by ¬ßa75%¬ß7.`) : '',
      });
      case 'ELEPHANT': return ({
        category: minecraftColoredStringToText(`¬ß8Farming Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}ZEILENUMBRUCH
      `), // TODO: Implement Pet Items which can add / change stats
        firstAbility: minecraftColoredStringToText(`¬ß6StompZEILENUMBRUCH¬ß7¬ß7Gain ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Stomp'][rarity][0], maxStat: extraPetStatsMinMax[id]['Stomp'][rarity][1] })}‚ùà Defense ¬ß7for every 100 ¬ßf‚ú¶¬ßfSpeed¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Walking FortressZEILENUMBRUCH¬ß7¬ß7Gain ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['WalkingFortress'][rarity][0], maxStat: extraPetStatsMinMax[id]['WalkingFortress'][rarity][1] })}‚ù§ Health ¬ß7for every 10 ¬ßa‚ùà ¬ßaDefense¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Trunk EfficiencyZEILENUMBRUCH¬ß7¬ß7Grants ¬ß6+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['TrunkEfficiency'][rarity][0], maxStat: extraPetStatsMinMax[id]['TrunkEfficiency'][rarity][1] })}‚òò Farming Fortune¬ß7, ¬ß7which increases your chance for multiple drops.`) : '',
      });
      case 'CHICKEN': return ({
        category: minecraftColoredStringToText(`¬ß8Farming Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Light FeetZEILENUMBRUCH¬ß7¬ß7¬ß7Reduces fall damage by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['LightFeet'][rarity][0], maxStat: extraPetStatsMinMax[id]['LightFeet'][rarity][1] })}%¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6EggstraZEILENUMBRUCH¬ß7¬ß7Killing chickens has a ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Eggstra'][rarity][0], maxStat: extraPetStatsMinMax[id]['Eggstra'][rarity][1] })}% ¬ß7chance to drop an egg.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Mighty ChickensZEILENUMBRUCH¬ß7¬ß7Chicken minions work ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MightyChickens'][rarity][0], maxStat: extraPetStatsMinMax[id]['MightyChickens'][rarity][1] })}% ¬ß7faster while on your island.`) : '',
      });
      case 'BEE': return ({
        category: minecraftColoredStringToText(`¬ß8Farming Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}ZEILENUMBRUCH
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6HiveZEILENUMBRUCH¬ß7For each player within ¬ßa25 ¬ß7blocks:ZEILENUMBRUCH¬ßb+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Hive'][rarity]['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['Hive'][rarity]['Intelligence'][1] })}‚úé IntelligenceZEILENUMBRUCH¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Hive'][rarity]['Strength'][0], maxStat: extraPetStatsMinMax[id]['Hive'][rarity]['Strength'][1] })}‚ùÅ StrengthZEILENUMBRUCH¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Hive'][rarity]['Defense'][0], maxStat: extraPetStatsMinMax[id]['Hive'][rarity]['Defense'][1] })}‚ùà DefenseZEILENUMBRUCH¬ß8Max 15 players"`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`"¬ß6Busy Buzz BuzzZEILENUMBRUCH¬ß7Grants ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BusyBuzzBuzz'][rarity][0], maxStat: extraPetStatsMinMax[id]['BusyBuzzBuzz'][rarity][1] })} ¬ß7of each to your pet:ZEILENUMBRUCH¬ß6‚òò Farming FortuneZEILENUMBRUCH¬ß6‚òò Foraging FortuneZEILENUMBRUCH¬ß6‚òò Mining Fortune`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Weaponized HoneyZEILENUMBRUCH¬ß7¬ß7Gain ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['WeaponizedHoney'][rarity][0], maxStat: extraPetStatsMinMax[id]['WeaponizedHoney'][rarity][1] })}% ¬ß7of received damage as ¬ß6‚ù§ ¬ß6Absorption¬ß7.`) : '',
      });
      case 'REINDEER': return ({
        category: minecraftColoredStringToText(`¬ß8Fishing Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Sea Creature Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['SeaCreatureChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['SeaCreatureChance'][1] })}%ZEILENUMBRUCH
      ¬ß7Fishing Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['FishingSpeed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['FishingSpeed'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Winter SprintZEILENUMBRUCH¬ß7¬ß7Gain ¬ßddouble ¬ß7pet ¬ßaEXP¬ß7.`),
        secondAbility: minecraftColoredStringToText(`¬ß6InfusedZEILENUMBRUCH¬ß7¬ß7Gives ¬ßb+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Infused'][rarity][0], maxStat: extraPetStatsMinMax[id]['Infused'][rarity][1] })}‚òÇ Fishing Speed ¬ß7and ¬ß3+10Œ± ¬ß3Sea Creature Chance ¬ß7while on ¬ß7¬ßcJerry's Workshop¬ß7.`),
        thirdAbility: minecraftColoredStringToText(`¬ß6Snow PowerZEILENUMBRUCH¬ß7¬ß7Grants ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['SnowPower'][rarity][0], maxStat: extraPetStatsMinMax[id]['SnowPower'][rarity][1] })}% ¬ß7bonus gift chance during the ¬ßcGift Attack ¬ß7event.`),
        fourthAbility: minecraftColoredStringToText(`¬ß6Icy WindZEILENUMBRUCH¬ß7¬ß7Grants ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['IcyWind'][rarity][0], maxStat: extraPetStatsMinMax[id]['IcyWind'][rarity][1] })}% ¬ß7chance of getting double ¬ßbIce Essence¬ß7.`)
      });
      case 'SQUID': return ({
        category: minecraftColoredStringToText(`¬ß8Fishing Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6More InkZEILENUMBRUCH¬ß7¬ß7Gain a ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MoreInk'][rarity][0], maxStat: extraPetStatsMinMax[id]['MoreInk'][rarity][1] })}% ¬ß7chance to get double drops from squids.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Ink SpecialtyZEILENUMBRUCH¬ß7¬ß7Buffs the ¬ß5Ink Wand ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['InkSpecialty'][rarity]['Damage'][0], maxStat: extraPetStatsMinMax[id]['InkSpecialty'][rarity]['Damage'][1] })} ¬ßc‚ùÅ Damage ¬ßc¬ß7and ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['InkSpecialty'][rarity]['Strength'][0], maxStat: extraPetStatsMinMax[id]['InkSpecialty'][rarity]['Strength'][1] })} ¬ßc‚ùÅ Strength¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Fishing Wisdom BoostZEILENUMBRUCH¬ß7¬ß7¬ß7Grants ¬ß3+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['FishingWisdomBoost'][rarity][0], maxStat: extraPetStatsMinMax[id]['FishingWisdomBoost'][rarity][1] })}‚òØ Fishing Wisdom¬ß7.`) : '',
      });
      case 'FLYING_FISH': return ({
        category: minecraftColoredStringToText(`¬ß8Fishing Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Quick ReelZEILENUMBRUCH¬ß7¬ß7Grants ¬ßb+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['QuickReel'][rarity][0], maxStat: extraPetStatsMinMax[id]['QuickReel'][rarity][1] })}‚òÇ Fishing Speed¬ß7.`),
        secondAbility: (rarityNumber >= 3 && rarityNumber <= 5) ?
          minecraftColoredStringToText(`¬ß6Water BenderZEILENUMBRUCH¬ß7¬ß7Gives ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['WaterBender'][rarity]['Strength'][0], maxStat: extraPetStatsMinMax[id]['WaterBender'][rarity]['Strength'][1] })} ¬ßc‚ùÅ Strength ¬ß7andZEILENUMBRUCH¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['WaterBender'][rarity]['Defense'][0], maxStat: extraPetStatsMinMax[id]['WaterBender'][rarity]['Defense'][1] })}‚ùà Defense ¬ßa¬ß7when near water.`)
          : minecraftColoredStringToText(`¬ß6Lava BenderZEILENUMBRUCH¬ß7¬ß7Gives ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['LavaBender'][rarity]['Strength'][0], maxStat: extraPetStatsMinMax[id]['LavaBender'][rarity]['Strength'][1] })} ¬ßc‚ùÅ Strength ¬ß7andZEILENUMBRUCH¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['LavaBender'][rarity]['Defense'][0], maxStat: extraPetStatsMinMax[id]['LavaBender'][rarity]['Defense'][1] })}‚ùà ¬ßaDefense ¬ß7when near water or lava.`),
        thirdAbility: (rarityNumber >= 5 && rarityNumber !== 6) ?
          minecraftColoredStringToText(`¬ß6Deep Sea DiverZEILENUMBRUCH¬ß7¬ß7Increases the stats of Diver's Armor by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['DeepSeaDiver'][rarity][0], maxStat: extraPetStatsMinMax[id]['DeepSeaDiver'][rarity][1] })}%¬ß7.`)
          : minecraftColoredStringToText(`¬ß6Magmatic DiverZEILENUMBRUCH¬ß7¬ß7Increases the stats of Magma Lord Armor by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['MagmaticDiver'][rarity][0], maxStat: extraPetStatsMinMax[id]['MagmaticDiver'][rarity][1] })}%¬ß7.`),
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6Rapid DecayZEILENUMBRUCH¬ß7¬ß7Increases the chance to activate the ¬ßd¬ßlFlash Enchantment ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RapidDecay'][rarity][0], maxStat: extraPetStatsMinMax[id]['RapidDecay'][rarity][1] })}%¬ß7.`) : '',
      });
      case 'DOLPHIN': return ({
        category: minecraftColoredStringToText(`¬ß8Fishing Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}ZEILENUMBRUCH
      ¬ß7Sea Creature Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['SeaCreatureChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['SeaCreatureChance'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Pod TacticsZEILENUMBRUCH¬ß7¬ß7Grants ¬ßb+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['PodTactics'][rarity][0], maxStat: extraPetStatsMinMax[id]['PodTactics'][rarity][1] })}‚òÇ Fishing Speed ¬ß7for each player within ¬ßa30 ¬ß7blocks, up to ¬ßa5 ¬ßa¬ß7players.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6EcholocationZEILENUMBRUCH¬ß7¬ß7Grants ¬ß3+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Echolocation'][rarity][0], maxStat: extraPetStatsMinMax[id]['Echolocation'][rarity][1] })}Œ± Sea Creature Chance¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Splash SurpriseZEILENUMBRUCH¬ß7¬ß7Stun sea creatures for ¬ßa5s ¬ß7after fishing them up.`) : '',
      });
      case 'BLUE_WHALE': return ({
        category: minecraftColoredStringToText(`¬ß8Fishing Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6IngestZEILENUMBRUCH¬ß7¬ß7All potions heal ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Ingest'][rarity][0], maxStat: extraPetStatsMinMax[id]['Ingest'][rarity][1] })}‚ù§¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6BulkZEILENUMBRUCH¬ß7¬ß7Gain ¬ßa${extraPetStatsMinMax[id]['Bulk'][rarity]['Defense'][0]}¬ßa‚ùà DefenseZEILENUMBRUCH¬ß7per ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Bulk'][rarity]['Health'][0], maxStat: extraPetStatsMinMax[id]['Bulk'][rarity]['Health'][1] })} Max ¬ßc‚ù§ ¬ßcHealth¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6ArchimedesZEILENUMBRUCH¬ß7¬ß7Gain ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Archimedes'][rarity][0], maxStat: extraPetStatsMinMax[id]['Archimedes'][rarity][1] })}% Max ¬ßc‚ù§ Health¬ß7.`) : '',
      });
      case 'BABY_YETI': return ({
        category: minecraftColoredStringToText(`¬ß8Fishing Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Cold BreezeZEILENUMBRUCH¬ß7¬ß7Gives ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ColdBreeze'][rarity][0], maxStat: extraPetStatsMinMax[id]['ColdBreeze'][rarity][1] })} ¬ßc‚ùÅ Strength ¬ß7andZEILENUMBRUCH¬ß9‚ò† Crit ¬ß9Damage ¬ß7when near snow.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Ice ShieldsZEILENUMBRUCH¬ß7¬ß7Gain ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['IceShields'][rarity][0], maxStat: extraPetStatsMinMax[id]['IceShields'][rarity][1] })}% ¬ß7of your ¬ßc‚ùÅ StrengthZEILENUMBRUCH¬ß7as ¬ßa‚ùà Defense¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Yeti FuryZEILENUMBRUCH¬ß7¬ß7Buffs the ¬ß6Yeti Sword ¬ß7byZEILENUMBRUCH¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['YetiFury'][rarity][0], maxStat: extraPetStatsMinMax[id]['YetiFury'][rarity][1] })} ¬ßc‚ùÅ Damage ¬ß7and ¬ßb‚úé Intelligence¬ß7.`) : '',
      });
      case 'AMMONITE': return ({
        category: minecraftColoredStringToText(`¬ß8Fishing Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Sea Creature Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['SeaCreatureChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['SeaCreatureChance'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Heart of the SeaZEILENUMBRUCH¬ß7¬ß7Grants ¬ß3+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['HeartoftheSea'][rarity][0], maxStat: extraPetStatsMinMax[id]['HeartoftheSea'][rarity][1] })}Œ± Sea Creature Chance ¬ß7to your pet for each ¬ß5Heart of the Mountain ¬ß7level.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Expert Cave FisherZEILENUMBRUCH¬ß7¬ß7The fishing speed reduction from being underground is attenuated by ¬ß7¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ExpertCaveFisher'][rarity][0], maxStat: extraPetStatsMinMax[id]['ExpertCaveFisher'][rarity][1] })}%¬ß7.`),
        thirdAbility: minecraftColoredStringToText(`¬ß6Gift of the AmmoniteZEILENUMBRUCH¬ß7¬ß7Each Mining and Fishing level grants ¬ß7¬ßb+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['GiftoftheAmmonite'][rarity]['FishingSpeed'][0], maxStat: extraPetStatsMinMax[id]['GiftoftheAmmonite'][rarity]['FishingSpeed'][1] })}‚òÇ Fishing Speed¬ß7, ¬ßf+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['GiftoftheAmmonite'][rarity]['Speed'][0], maxStat: extraPetStatsMinMax[id]['GiftoftheAmmonite'][rarity]['Speed'][1] })}‚ú¶ Speed ¬ß7and ¬ß7¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['GiftoftheAmmonite'][rarity]['Defense'][0], maxStat: extraPetStatsMinMax[id]['GiftoftheAmmonite'][rarity]['Defense'][1] })}‚ùà Defense¬ß7.`),
      });
      case 'MEGALODON': return ({
        category: minecraftColoredStringToText(`¬ß8Fishing Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Magic Find: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['MagicFind'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['MagicFind'][1] })}ZEILENUMBRUCH
      ¬ß7Ferocity: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Blood ScentZEILENUMBRUCH¬ß7¬ß7Deal up to ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BloodScent'][rarity][0], maxStat: extraPetStatsMinMax[id]['BloodScent'][rarity][1] })}% ¬ßc‚ùÅ Damage ¬ß7based on the enemy's missing health.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Enhanced ScalesZEILENUMBRUCH¬ß7¬ß7Increases the stats of ¬ßaShark Scale Armor ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['EnhancedScales'][rarity][0], maxStat: extraPetStatsMinMax[id]['EnhancedScales'][rarity][1] })}%¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Feeding FrenzyZEILENUMBRUCH¬ß7¬ß7On kill gain ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['FeedingFrenzy'][rarity][0], maxStat: extraPetStatsMinMax[id]['FeedingFrenzy'][rarity][1] })}‚ùÅ Damage ¬ß7and ¬ßf‚ú¶ Speed ¬ß7for ¬ßa5s¬ß7.`) : '',
      });
      case 'MONKEY': return ({
        category: minecraftColoredStringToText(`¬ß8Foraging Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6TreebornZEILENUMBRUCH¬ß7¬ß7Grants ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Treeborn'][rarity][0], maxStat: extraPetStatsMinMax[id]['Treeborn'][rarity][1] })} ¬ß6‚òò Foraging Fortune¬ß7, which increases your chance at double logs.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Vine SwingZEILENUMBRUCH¬ß7¬ß7Gain +¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['VineSwing'][rarity][0], maxStat: extraPetStatsMinMax[id]['VineSwing'][rarity][1] })} ¬ßf‚ú¶ Speed ¬ß7while in The Park.`) : '',
        thirdability: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Evolved AxesZEILENUMBRUCH¬ß7¬ß7Reduce the cooldown of ¬ßaJungle Axe ¬ßa¬ß7and ¬ß5Treecapitator ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['EvolvedAxes'][rarity][0], maxStat: extraPetStatsMinMax[id]['EvolvedAxes'][rarity][1] })}%¬ß7.`) : '',
      });
      case 'LION': return ({
        category: minecraftColoredStringToText(`¬ß8Foraging Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}ZEILENUMBRUCH
      ¬ß7Strength: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Strength'][1] })}ZEILENUMBRUCH
      ¬ß7Ferocity: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Primal ForceZEILENUMBRUCH¬ß7¬ß7Adds ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['PrimalForce'][rarity]['Damage'][0], maxStat: extraPetStatsMinMax[id]['PrimalForce'][rarity]['Damage'][1] })} ¬ßc‚ùÅ Damage ¬ß7and ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['PrimalForce'][rarity]['Strength'][0], maxStat: extraPetStatsMinMax[id]['PrimalForce'][rarity]['Strength'][1] })} ¬ßc‚ùÅ ¬ßcStrength ¬ß7to your weapons.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6First PounceZEILENUMBRUCH¬ß7¬ß7First Strike¬ß7, Triple-Strike¬ß7, and ¬ßdCombo ¬ß7are ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['FirstPounce'][rarity][0], maxStat: extraPetStatsMinMax[id]['FirstPounce'][rarity][1] })}% ¬ß7more effective.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6King of the JungleZEILENUMBRUCH¬ß7¬ß7Deal ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['KingoftheJungle'][rarity][0], maxStat: extraPetStatsMinMax[id]['KingoftheJungle'][rarity][1] })}% ¬ßc‚ùÅ Damage ¬ß7against mobs that have attacked you.`) : '',
      });
      case 'GIRAFFE': return ({
        category: minecraftColoredStringToText(`¬ß8Foraging Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Chance: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritChance'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Good HeartZEILENUMBRUCH¬ß7¬ß7Regen ¬ßc${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['GoodHeart'][rarity][0], maxStat: extraPetStatsMinMax[id]['GoodHeart'][rarity][1] })} ‚ù§ ¬ß7per second.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Higher GroundZEILENUMBRUCH¬ß7¬ß7Grants ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['HigherGround'][rarity]['Strength'][0], maxStat: extraPetStatsMinMax[id]['HigherGround'][rarity]['Strength'][1] })}‚ùÅ Strength ¬ß7and ¬ß9+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['HigherGround'][rarity]['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['HigherGround'][rarity]['CritDamage'][1] })}‚ò†", "¬ß9Crit Damage ¬ß7when mid air or jumping.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Long NeckZEILENUMBRUCH¬ß7¬ß7See enemies from afar and gain ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['LongNeck'][rarity][0], maxStat: extraPetStatsMinMax[id]['LongNeck'][rarity][1] })}% ¬ßa¬ß7dodge chance.`) : '',
      });
      case 'OCELOT': return ({
        category: minecraftColoredStringToText(`¬ß8Foraging Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Speed: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Speed'][1] })}ZEILENUMBRUCH
      ¬ß7Ferocity: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Ferocity'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Foraging Wisdom BoostZEILENUMBRUCH¬ß7¬ß7¬ß7Grants ¬ß3+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ForagingWisdomBoost'][rarity][0], maxStat: extraPetStatsMinMax[id]['ForagingWisdomBoost'][rarity][1] })}‚òØ Foraging Wisdom¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Tree HuggerZEILENUMBRUCH¬ß7¬ß7Foraging minions work ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['TreeHugger'][rarity][0], maxStat: extraPetStatsMinMax[id]['TreeHugger'][rarity][1] })}% ¬ß7faster while on your island.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Tree EssenceZEILENUMBRUCH¬ß7¬ß7Gain a ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['TreeEssence'][rarity][0], maxStat: extraPetStatsMinMax[id]['TreeEssence'][rarity][1] })}% ¬ß7chance to get exp from breaking a log.`) : '',
      });
      case 'GUARDIAN': return ({
        category: minecraftColoredStringToText(`¬ß8Enchanting Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Defense: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Defense'][1] })}ZEILENUMBRUCH
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6LaserbeamZEILENUMBRUCH¬ß7¬ß7Zaps your enemies for ¬ßb${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Lazerbeam'][rarity][0], maxStat: extraPetStatsMinMax[id]['Lazerbeam'][rarity][1] })}x ¬ß7your ¬ßb‚úé Intelligence ¬ß7every ¬ßa3s¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6Enchanting Wisdom BoostZEILENUMBRUCH¬ß7¬ß7¬ß7Grants ¬ß3+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['EnchantingWisdomBoost'][rarity][0], maxStat: extraPetStatsMinMax[id]['EnchantingWisdomBoost'][rarity][1] })}‚òØ Enchanting Wisdom¬ß7.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Mana PoolZEILENUMBRUCH¬ß7¬ß7Regenerate ¬ßb${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ManaPool'][rarity][0], maxStat: extraPetStatsMinMax[id]['ManaPool'][rarity][1] })}% ¬ß7extra mana, doubled when near or in water.`) : '',
        fourthAbility: (rarityNumber >= 6) ? minecraftColoredStringToText(`¬ß6Lucky SevenZEILENUMBRUCH¬ß7¬ß7Gain ¬ßb+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['LuckySeven'][rarity][0], maxStat: extraPetStatsMinMax[id]['LuckySeven'][rarity][1] })}% ¬ß7chance to find ¬ß5ultra rare ¬ß5¬ß7books in ¬ßdSuperpairs¬ß7.`) : '',
      });
      case 'SHEEP': return ({
        category: minecraftColoredStringToText(`¬ß8Alchemy Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}ZEILENUMBRUCH
      ¬ß7Ability Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['AbilityDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['AbilityDamage'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Mana SaverZEILENUMBRUCH¬ß7¬ß7¬ß7Reduces the mana cost of abilities by ¬ß7¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ManaSaver'][rarity][0], maxStat: extraPetStatsMinMax[id]['ManaSaver'][rarity][1] })}%¬ß7.`),
        secondAbility: (rarityNumber >= 3) ? minecraftColoredStringToText(`¬ß6OverhealZEILENUMBRUCH¬ß7¬ß7Gives a ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Overheal'][rarity][0], maxStat: extraPetStatsMinMax[id]['Overheal'][rarity][1] })}% ¬ß7shield after not taking damage for 10s.`) : '',
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Dungeon WizardZEILENUMBRUCH¬ß7¬ß7Increases your total mana by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['DungeonWizard'][rarity][0], maxStat: extraPetStatsMinMax[id]['DungeonWizard'][rarity][1] })}% ¬ßa¬ß7while in dungeons.`) : '',
      });
      case 'PARROT': return ({
        category: minecraftColoredStringToText(`¬ß8Alchemy Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Intelligence: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Intelligence'][1] })}ZEILENUMBRUCH
      ¬ß7Crit Damage: ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['CritDamage'][1] })}%
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6FlamboyantZEILENUMBRUCH¬ß7¬ß7Adds ¬ßa${calculateParrotStatFlamboyant({ maxLevel, level, maxStat: extraPetStatsMinMax[id]['Flamboyant'][rarity][1] })} ¬ß7levels to intimidation accessories.`),
        secondAbility: minecraftColoredStringToText(`¬ß6RepeatZEILENUMBRUCH¬ß7¬ß7Boosts potions duration by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['Repeat'][rarity][0], maxStat: extraPetStatsMinMax[id]['Repeat'][rarity][1] })}%¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Bird DiscourseZEILENUMBRUCH¬ß7¬ß7Gives ¬ßc+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BirdDiscourse'][rarity][0], maxStat: extraPetStatsMinMax[id]['BirdDiscourse'][rarity][1] })}‚ùÅ Strength ¬ß7to players within ¬ßa20 ¬ß7blocks.ZEILENUMBRUCH¬ß8Doesn't stack`) : '',
        fourthAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Parrot Feather InfusionZEILENUMBRUCH¬ß7¬ß7When summoned or in your Pets menu, boost the duration of consumed ¬ßcGod Potions ¬ß7by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['ParrotFeatherInfusion'][rarity][0], maxStat: extraPetStatsMinMax[id]['ParrotFeatherInfusion'][rarity][1] })}%¬ß7.`) : '',
      });
      case 'JELLYFISH': return ({
        category: minecraftColoredStringToText(`¬ß8Alchemy Pet, ${skin ? skin : ''}`),
        stats: minecraftColoredStringToText(`
      ¬ß7Health: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['Health'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['Health'][1] })}ZEILENUMBRUCH
      ¬ß7Health Regen: ¬ßa+${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['BaseStats']['HealthRegeneration'][0], maxStat: extraPetStatsMinMax[id]['BaseStats']['HealthRegeneration'][1] })}
      `),
        firstAbility: minecraftColoredStringToText(`¬ß6Radiant ScyphozoaZEILENUMBRUCH¬ß7¬ß7While in dungeons, reduces the mana cost of Power Orbs by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['RadiantScyphozoa'][rarity][0], maxStat: extraPetStatsMinMax[id]['RadiantScyphozoa'][rarity][1] })}%¬ß7.`),
        secondAbility: minecraftColoredStringToText(`¬ß6Stored EnergyZEILENUMBRUCH¬ß7¬ß7While in dungeons, for every ¬ßc2,000 HP ¬ß7you heal teammates the cooldown of ¬ßaWish ¬ß7is reduced by ¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['StoredEnergy'][rarity][0], maxStat: extraPetStatsMinMax[id]['StoredEnergy'][rarity][1] })}s¬ß7, up to ¬ßa30s¬ß7.`),
        thirdAbility: (rarityNumber >= 5) ? minecraftColoredStringToText(`¬ß6Powerful PotionsZEILENUMBRUCH¬ß7¬ß7While in dungeons, increase the effectiveness of Dungeon Potions by ¬ß7¬ßa${calculatePetStats({ maxLevel, level, minStat: extraPetStatsMinMax[id]['PowerfulPotions'][rarity][0], maxStat: extraPetStatsMinMax[id]['PowerfulPotions'][rarity][1] })}%¬ß7.`) : '',
      });
      default:
        console.log('Pet not found', id);
        console.log()
        return null;
    }
  }

  function roundLegendaryTreasure(num: any, level: number) {
    let levelneedOneUp = [188, 164, 140]
    let levelneedOneDown = [196]
    let truncated = parseFloat(Math.floor(num.toString() * 10000).toString()) / 10000;
    // console.log('\nNUM', truncated);

    if (levelneedOneUp.includes(level)) {
      truncated += 0.001
    }
    else if (levelneedOneDown.includes(level)) {
      truncated -= 0.001;
    }

    return parseFloat(truncated.toFixed(2));
  }


  function berechne_m(x: number, y: number, b: number) {
    return (y - b) / x
  }

  function calculateParrotStatFlamboyant({
    maxLevel,
    level,
    maxStat,
  }: {
    maxLevel: number,
    level: number,
    maxStat: number,
  }) {
    return ((level / maxLevel) * (maxStat - 1) + 1).toFixed(0);
  }

  function calculatePetStats({
    maxLevel,
    level,
    minStat,
    maxStat,
    minosRelic = false,
  }: {
    maxLevel: number,
    level: number,
    minStat: number,
    maxStat: number,
    minosRelic?: boolean,
  }) {
    if (maxLevel > 100) { level -= 100; maxLevel -= 100 }
    let erg = berechne_m(maxLevel, maxStat, minStat) * level + minStat
    if (minosRelic) return parseFloat((erg * (4 / 3)).toFixed(2))
    return erg
  }

  function getNumericRepresentation(rarity: 'COMMON' | 'UNCOMMON' | 'RARE' | 'EPIC' | 'LEGENDARY' | 'MYTHIC') {
    switch (rarity) {
      case 'COMMON': return 1
      case 'UNCOMMON': return 2
      case 'RARE': return 3
      case 'EPIC': return 4
      case 'LEGENDARY': return 5
      case 'MYTHIC': return 6
    }
  }
}